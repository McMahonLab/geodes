plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
SP2
plot_grid(ME1, ME2, labels = c("A", "B"))
plot_grid(SP1, SP2, labels = c("A", "B"))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
phylum_totals
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
plot.sig.spark.key <- sig.spark.key[which(sig.spark.key$Cluster %in% clusters),]
phylum_totals <- table(plot.sig.spark.key$Phylum)
plot.sig.spark.key$Cluster <- paste("ME", plot.sig.spark.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
x <- sig.spark.key[which(sig.spark.key$Cluster == 19),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Plot phyla, not including unclassified
phyla_breakdown <- aggregate(Totals ~ Phylum, x, sum)
x <- sig.spark.key[which(sig.spark.key$Cluster == 13),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 10),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 15),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 4),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 6),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 14),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
grep("carboxylase", x)
x$Product
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads()
enableWGCNAThreads()
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
# Gene keys
#mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey.csv", header = T)
#spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
#abun_mnorm <- mnorm[which(rowSums(mnorm) > (dim(mnorm)[2] * 1000)), ]
#abun_snorm <- snorm[which(rowSums(snorm) > (dim(snorm)[2] * 1000)), ]
abun_tnorm <- tnorm[which(rowSums(tnorm) > (dim(tnorm)[2] * 1000)), ]
abun_tnorm$Genes <- rownames(abun_tnorm)
abun_tnorm <- melt(abun_tnorm)
abun_tnorm$Timepoint <- metadata$Timepoint[match(abun_tnorm$variable, metadata$Sample)]
agg_abun_tnorm <- aggregate(value ~ Genes + Timepoint, data = abun_tnorm, mean)
new_abun_tnorm <- reshape(agg_abun_tnorm, idvar = "Genes", timevar = "Timepoint", direction = "wide")
rownames(new_abun_tnorm) <- new_abun_tnorm[, 1]
new_abun_tnorm <- new_abun_tnorm[, 2:dim(new_abun_tnorm)[2]]
new_abun_tnorm <- new_abun_tnorm[, 1:7]
# fdr.spark <- fdrtool(fisher.g.test(t(new_abun_snorm)), statistic = "pvalue")
# sig.spark <- t(new_abun_snorm[which(fdr.spark$pval < 0.05),])
#
fdr.trout <- fdrtool(fisher.g.test(t(new_abun_tnorm)), statistic = "pvalue")
sig.trout <- t(new_abun_tnorm[which(fdr.trout$pval < 0.05),])
trout_net <- blockwiseModules(sig.trout, maxBlockSize = 1000, power = 18, loadTOM = F, saveTOMs = F, networkType = "signed", minModuleSize = 30, numericLabels = T, nThreads = 8, verbose = 3)
sig.trout.key <- trout_key[match(colnames(sig.trout), trout_key$Gene), ]
sig.trout.key$Cluster <- trout_net$colors
sig.trout.key$Totals <- rowSums(new_abun_tnorm)[match(sig.trout.key$Gene, rownames(new_abun_tnorm))]
write.csv(sig.trout.key, "D:/geodes_data_tables/WGCNA_trout_results.csv", row.names = F)
write.csv(trout_net$MEs, "D:/geodes_data_tables/WGCNA_trout_eigenvectors.csv", row.names = T)
#### Trout
# Read data
sig.trout.key <- read.csv("D:/geodes_data_tables/WGCNA_trout_results.csv", header = T)
eigenvectors <- read.csv("D:/geodes_data_tables/WGCNA_trout_eigenvectors.csv", header = T, row.names = 1)
# Fix taxonomy
sig.trout.key$Taxonomy <- gsub("Bacteria;", "", sig.trout.key$Taxonomy)
sig.trout.key$Taxonomy <- gsub("Eukaryota;", "", sig.trout.key$Taxonomy)
sig.trout.key$Phylum <- sapply(strsplit(as.character(sig.trout.key$Taxonomy),";"), `[`, 1)
sig.trout.key$Phylum <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION MH", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION LP", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("None", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified Oligohymenophorea", "Ciliophora", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified Pelagophyceae", "Ochrophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Unclassified ", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("UnclassifiedIsochrysidales", "Haptophyta", sig.trout.key$Phylum)
eigenvectors$Timepoint <- rownames(eigenvectors)
long_eigenvectors <- melt(eigenvectors)
plot.colors <- NA
plot.colors[which(long_eigenvectors$value > 0)] <- "green"
plot.colors[which(long_eigenvectors$value < 0)] <- "red"
long_eigenvectors$Sign <- plot.colors
long_eigenvectors$Timepoint <- factor(long_eigenvectors$Timepoint, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
for(i in 0:24){
cluster = paste("ME", i, sep = "")
p <- ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
print(p)
}
clusters <- c(1, 3, 4, 11, 16, 18)
plot.sig.trout.key <- sig.trout.key[which(sig.trout.key$Cluster %in% clusters),]
# Panel A
modules <- paste("ME", clusters, sep = "")
plot.long_eigenvectors <- long_eigenvectors[which(long_eigenvectors$variable %in% modules), ]
SP1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM")) + theme(legend.position = "none")
TB1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM")) + theme(legend.position = "none")
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.trout.key$Phylum)
plot.sig.trout.key$Cluster <- paste("ME", plot.sig.trout.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.trout.key <- plot.sig.trout.key[which(plot.sig.trout.key$Phylum %in% keep.phyla), ]
TB1
phylum_totals
TB2 <- ggplot(data = plot.sig.trout.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#1f78b4", "grey"))
plot_grid(TB1, TB2, labels = c("A", "B"))
TB2 <- ggplot(data = plot.sig.trout.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#1f78b4", "grey", "#a6cee3"))
plot_grid(TB1, TB2, labels = c("A", "B"))
x <- sig.trout.key[which(sig.trout.key$Cluster == 1),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 4),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 3),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 11),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 18),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 16),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified.csv", header = T)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
totals <- rowSums(snorm)
top10 <- rownames(snorm)[order(totals, decreasing = T)]
top10 <- top10[2:11]
spark_key[match(top10, spark_key$Gene),]
top10 <- rownames(snorm)[order(totals, decreasing = T)]
top10 <- top10[2:50]
spark_key[match(top10, spark_key$Gene),]
spark_key[match(top10, spark_key$Gene), c(3,4)]
top10 <- rownames(snorm)[order(totals, decreasing = T)]
top10 <- top10[51:100]
spark_key[match(top10, spark_key$Gene), c(3,4)]
spark_key[match(top10, spark_key$Gene), c(3,4)]
totals <- rowSums(mnorm)
top10 <- rownames(mnorm)[order(totals, decreasing = T)]
top10 <- top10[1:11]
mendota_key[match(top10, mendota_key$Gene), c(3,4)]
top10 <- rownames(mnorm)[order(totals, decreasing = T)]
top10 <- top10[12:50]
mendota_key[match(top10, mendota_key$Gene), c(3,4)]
totals <- rowSums(tnorm)
top10 <- rownames(tnorm)[order(totals, decreasing = T)]
top10 <- top10[1:11]
trout_key[match(top10, trout_key$Gene), c(3,4)]
top10 <- rownames(tnorm)[order(totals, decreasing = T)]
top10 <- top10[12:50]
trout_key[match(top10, trout_key$Gene), c(3,4)]
# How abundant are the bins?
bins <- read.csv("D:/geodes_data_tables/GEODES_bin_data.csv", header = T)
contigs <- read.table("D:/geodes_data_tables/GEODES_binned_contigs.txt")
head(bins)
# only look at reasonable quality bins:
bins <- bins[which(bins$completeness > 30 && bins$contamination < 10),]
# How abundant are the bins?
bins <- read.csv("D:/geodes_data_tables/GEODES_bin_data.csv", header = T)
which(bins$completeness > 30
)
which(bins$contamination < 10)
which(bins$completeness > 30 && bins$contamination < 10)
# only look at reasonable quality bins:
bins <- bins[which(bins$completeness > 30),]
bins <- bins[which(bins$contamination < 10),]
head(contigs)
head(bins)
contigs <- contigs[which(is.na(match(contigs$bin, bins$bin)) == F),]
contigs <- read.table("D:/geodes_data_tables/GEODES_binned_contigs.txt")
match(contigs$bin, bins$bin)
match(contigs$V1, bins$bin)
contigs <- contigs[which(is.na(match(contigs$V1, bins$bin)) == F),]
contigs <- read.table("D:/geodes_data_tables/GEODES_binned_contigs.txt")
which(is.na(match(contigs$V1, bins$bin)) == F)
which(is.na(match(contigs$V1, bins$bin)) == T)
which(contigs$V1 %in% bins$bin)
head(contigs$V1)
which(contigs$V2 %in% bins$bin)
contigs <- contigs[which(contigs$V2 %in% bins$bin),]
i = 10
bins$bin[i]
bits <- contigs$V1[which(contigs$V2 == bins$bin[i])]
head(bits)
head(mendota_key)
which(mendota_key$Genome %in% bits)
ME_genes <- mendota_key$Gene[which(mendota_key$Genome %in% bits)]
ME_genes
which(rownames(mnorm) %in% ME_genes)
rowSums(mnorm[which(rownames(mnorm) %in% ME_genes),])
sum(rowSums(mnorm[which(rownames(mnorm) %in% ME_genes),]))
ME_sum <- c()
SP_sum <- c()
TB_sum <- c()
for(i in 1:length(bins$bin)){
bits <- contigs$V1[which(contigs$V2 == bins$bin[i])]
ME_genes <- mendota_key$Gene[which(mendota_key$Genome %in% bits)]
ME_sum[i] <- sum(rowSums(mnorm[which(rownames(mnorm) %in% ME_genes),]))
SP_genes <- spark_key$Gene[which(spark_key$Genome %in% bits)]
SP_sum[i] <- sum(rowSums(snorm[which(rownames(snorm) %in% ME_genes),]))
TB_genes <- trout_key$Gene[which(trout_key$Genome %in% bits)]
TB_sum[i] <- sum(rowSums(tnorm[which(rownames(tnorm) %in% ME_genes),]))
}
bin_counts <- data.frame(bins$bin, ME_sum, SP_sum, TB_sum)
colnames(bin_counts) <- c("Bin", "Mendota", "Sparkling", "Trout")
head(bin_counts)
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$Bin, bins$bin)]
head(bin_counts)
tail(bin_counts)
which(bin_counts$Mendota > 0 && bin_counts$Sparkling > 0 && bin_counts$Trout > 0)
which(bin_counts$Mendota > 0 & bin_counts$Sparkling > 0 & bin_counts$Trout > 0)
bin_counts <- bin_counts[which(bin_counts$Mendota > 0 & bin_counts$Sparkling > 0 & bin_counts$Trout > 0),]
bin_counts$Phylum <- sapply(strsplit(as.character(bin_counts$Taxonomy),";"), `[`, 2)
head(bin_counts)
unique(bin_counts$Phylum)
bin_counts$Phylum[which(is.na(bin_counts$Phylum) == T)] <- "Unclassified"
unique(bin_counts$Phylum)
library(ggplot2)
library(cowplot)
ggplot(data = bin_counts, aes(x = Bin, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity")
quantile(bin_counts$Mendota)
bin_counts$Bin <- factor(bin_counts$Bin, levels = bin_counts$Bin[order(bin_counts$Mendota, decreasing = T)])
ggplot(data = bin_counts, aes(x = Bin, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10() + labs(title = "Mendota") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = bin_counts, aes(x = Phylum, y = Mendota)) + geom_bar(stat = "identity")
ggplot(data = bin_counts, aes(x = Phylum, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = "Mendota", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Mendota", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Sparkling, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Sparkling", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Trout, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Trout Bog", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
# Repeat with metagenomic read counts
# run the following code if you skipped the earlier code on metagenomes:
metaG_reads <- read.table("D:/geodes_data_tables/GEODES_metaG_2018-01-26.readcounts.txt", row.names = 1, sep = "\t")
colnames(metaG_reads) <- c("GEODES005", "GEODES006", "GEODES057", "GEODES058", "GEODES117", "GEODES118", "GEODES165", "GEODES166", "GEODES167", "GEODES168")
metaG_key <- read.table("D:/geodes_data_tables/GEODES_metaG_genekey.txt", sep = "\t", quote = "")
colnames(metaG_key) <- c("Gene", "Genome", "Taxonomy", "Product")
lakekey <- c("Sparkling", "Sparkling", "Trout", "Trout", "Mendota", "Mendota", "Sparkling2009", "Sparkling2009", "Sparkling2009", "Sparkling2009")
metaG_reads <- sweep(metaG_reads, 2, colSums(metaG_reads), "/")
head(metaG_reads)
i = 5
bits <- contigs$V1[which(contigs$V2 == bins$bin[i])]
genes <- metaG_key$Gene[which(metaG_key$Genome %in% bits)]
reads <- metaG_reads[which(rownames(metaG_reads) %in% genes),]
sum(rowSums(reads[,which(lakekey == "Mendota")]))
rowSums(reads[,which(lakekey == "Mendota")])
ME_metaG <- c()
SP_metaG <- c()
TB_metaG <- c()
SP_metaG2 <- c()
for(i in 1:length(bins$bin)){
bits <- contigs$V1[which(contigs$V2 == bins$bin[i])]
genes <- metaG_key$Gene[which(metaG_key$Genome %in% bits)]
reads <- metaG_reads[which(rownames(metaG_reads) %in% genes),]
ME_metaG[i] <- sum(rowSums(reads[,which(lakekey == "Mendota")]))
SP_metaG[i] <- sum(rowSums(reads[,which(lakekey == "Sparkling")]))
TB_metaG[i] <- sum(rowSums(reads[,which(lakekey == "Trout")]))
SP_metaG2[i] <- sum(rowSums(reads[,which(lakekey == "Sparkling2009")]))
}
bin_counts$Mendota_metaG <- ME_metaG
bin_counts$Sparkling_metaG <- SP_metaG
bin_counts <- data.frame(bins$bin)
bin_counts$Mendota_metaG <- ME_metaG
bin_counts$Sparkling_metaG <- SP_metaG
bin_counts$Trout_metaG <- TB_metaG
bin_counts$Sparkling09_metaG <- SP_metaG2
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$Bin, bins$bin)]
bin_counts <- bin_counts[which(bin_counts$Mendota_metaG > 0 & bin_counts$Sparkling_metaG > 0 & bin_counts$Trout_metaG > 0 & bin_counts$Sparkling_metaG2 > 0),]
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$bin, bins$bin)]
bin_counts <- bin_counts[which(bin_counts$Mendota_metaG > 0 & bin_counts$Sparkling_metaG > 0 & bin_counts$Trout_metaG > 0 & bin_counts$Sparkling_metaG2 > 0),]
bin_counts$Phylum <- sapply(strsplit(as.character(bin_counts$Taxonomy),";"), `[`, 2)
bin_counts$Phylum[which(is.na(bin_counts$Phylum) == T)] <- "Unclassified"
head(bin_counts)
bin_counts <- data.frame(bins$bin)
bin_counts$Mendota_metaG <- ME_metaG
bin_counts$Sparkling_metaG <- SP_metaG
bin_counts$Trout_metaG <- TB_metaG
bin_counts$Sparkling09_metaG <- SP_metaG2
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$bin, bins$bin)]
bin_counts <- bin_counts[which(bin_counts$Mendota_metaG > 0 | bin_counts$Sparkling_metaG > 0 | bin_counts$Trout_metaG > 0 | bin_counts$Sparkling_metaG2 > 0),]
bin_counts$Phylum <- sapply(strsplit(as.character(bin_counts$Taxonomy),";"), `[`, 2)
bin_counts$Phylum[which(is.na(bin_counts$Phylum) == T)] <- "Unclassified"
bin_counts <- data.frame(bins$bin)
bin_counts$Mendota_metaG <- ME_metaG
bin_counts$Sparkling_metaG <- SP_metaG
bin_counts$Trout_metaG <- TB_metaG
bin_counts$Sparkling09_metaG <- SP_metaG2
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$bin, bins$bin)]
which(bin_counts$Mendota_metaG > 0 | bin_counts$Sparkling_metaG > 0 | bin_counts$Trout_metaG > 0 | bin_counts$Sparkling_metaG2 > 0)
bin_counts$Phylum <- sapply(strsplit(as.character(bin_counts$Taxonomy),";"), `[`, 2)
bin_counts$Phylum[which(is.na(bin_counts$Phylum) == T)] <- "Unclassified"
head(bin_counts)
ggplot(data = bin_counts, aes(x = Phylum, y = Mendota_metaG, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Mendota", x = "Bin Phylum Assignment", y = "Metagenomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Sparkling_metaG, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Sparkling", x = "Bin Phylum Assignment", y = "Metagenomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Trout_metaG, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Trout Bog", x = "Bin Phylum Assignment", y = "Metagenomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Sparkling_metaG2, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Sparkling 2009", x = "Bin Phylum Assignment", y = "Metagenomic Read Counts")
head(bin_counts)
ggplot(data = bin_counts, aes(x = Phylum, y = Sparkling09_metaG, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Sparkling 2009", x = "Bin Phylum Assignment", y = "Metagenomic Read Counts")
snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified.csv", header = T)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
bins <- read.csv("D:/geodes_data_tables/GEODES_bin_data.csv", header = T)
contigs <- read.table("D:/geodes_data_tables/GEODES_binned_contigs.txt")
# only look at reasonable quality bins:
bins <- bins[which(bins$completeness > 30),]
bins <- bins[which(bins$contamination < 10),]
contigs <- contigs[which(contigs$V2 %in% bins$bin),]
# For each bin:
# grab the contigs in that bin
# grab the genes in those contigs
# count up read counts for those genes
ME_sum <- c()
SP_sum <- c()
TB_sum <- c()
for(i in 1:length(bins$bin)){
bits <- contigs$V1[which(contigs$V2 == bins$bin[i])]
ME_genes <- mendota_key$Gene[which(mendota_key$Genome %in% bits)]
ME_sum[i] <- sum(rowSums(mnorm[which(rownames(mnorm) %in% ME_genes),]))
SP_genes <- spark_key$Gene[which(spark_key$Genome %in% bits)]
SP_sum[i] <- sum(rowSums(snorm[which(rownames(snorm) %in% ME_genes),]))
TB_genes <- trout_key$Gene[which(trout_key$Genome %in% bits)]
TB_sum[i] <- sum(rowSums(tnorm[which(rownames(tnorm) %in% ME_genes),]))
}
bin_counts <- data.frame(bins$bin, ME_sum, SP_sum, TB_sum)
colnames(bin_counts) <- c("Bin", "Mendota", "Sparkling", "Trout")
bin_counts$Taxonomy <- bins$phylodist_taxonomy[match(bin_counts$Bin, bins$bin)]
bin_counts <- bin_counts[which(bin_counts$Mendota > 0 | bin_counts$Sparkling > 0 | bin_counts$Trout > 0),]
bin_counts$Phylum <- sapply(strsplit(as.character(bin_counts$Taxonomy),";"), `[`, 2)
bin_counts$Phylum[which(is.na(bin_counts$Phylum) == T)] <- "Unclassified"
bin_counts$Bin <- factor(bin_counts$Bin, levels = bin_counts$Bin[order(bin_counts$Mendota, decreasing = T)])
ggplot(data = bin_counts, aes(x = Bin, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10() + labs(title = "Mendota") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = bin_counts, aes(x = Phylum, y = Mendota, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Mendota", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Sparkling, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Sparkling", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
ggplot(data = bin_counts, aes(x = Phylum, y = Trout, fill = Phylum)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(title = "Trout Bog", x = "Bin Phylum Assignment", y = "Metatranscriptomic Read Counts")
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
snorm <- read.csv("D:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key$Taxonomy <- gsub("Bacteria;", "", spark_key$Taxonomy)
spark_key$Taxonomy <- gsub("Eukaryota;", "", spark_key$Taxonomy)
spark_key$Phylum <- sapply(strsplit(as.character(spark_key$Taxonomy),";"), `[`, 1)
snorm$Genes <- rownames(snorm)
snorm <- melt(snorm)
snorm$variable <- gsub(".nonrRNA", "", snorm$variable)
snorm$Timepoint <- metadata$Timepoint[match(snorm$variable, metadata$Sample)]
snorm$Taxonomy <- spark_key$Phylum[match(snorm$Genes, spark_key$Gene)]
snorm$Taxonomy <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Ochrophyta,Eustigmataphyceae,Eustigmataceae,Nannochloropsis,gaditana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Bacillariophyceae,Naviculales,Phaeodactylaceae,Phaeodactylum,tricornutum", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("None", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Unclassified ", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedUnclassified", "Unclassified", snorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = snorm, mean)
wide_snorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_snorm) <- wide_snorm$Taxonomy
wide_snorm <- wide_snorm[, 2:dim(wide_snorm)[2]]
wide_snorm <- wide_snorm[which(rowSums(wide_snorm) > 3000),]
spark_phyla <- data.frame(Taxonomy = rownames(wide_snorm), Sums = rowSums(wide_snorm))
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
snorm <- read.csv("D:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
spark_key$Taxonomy <- gsub("Bacteria;", "", spark_key$Taxonomy)
spark_key$Taxonomy <- gsub("Eukaryota;", "", spark_key$Taxonomy)
spark_key$Phylum <- sapply(strsplit(as.character(spark_key$Taxonomy),";"), `[`, 1)
snorm$Genes <- rownames(snorm)
snorm <- melt(snorm)
snorm$variable <- gsub(".nonrRNA", "", snorm$variable)
library(ggplot2)
library(cowplot)
library(reshape2)
snorm <- melt(snorm)
snorm$variable <- gsub(".nonrRNA", "", snorm$variable)
snorm$Timepoint <- metadata$Timepoint[match(snorm$variable, metadata$Sample)]
snorm$Taxonomy <- spark_key$Phylum[match(snorm$Genes, spark_key$Gene)]
snorm$Taxonomy <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Ochrophyta,Eustigmataphyceae,Eustigmataceae,Nannochloropsis,gaditana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Bacillariophyceae,Naviculales,Phaeodactylaceae,Phaeodactylum,tricornutum", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("None", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Unclassified ", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedUnclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Ochrophyta,Eustigmataphyceae,Eustigmataceae,Nannochloropsis,gaditana", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Heterokonta,Bacillariophyceae,Naviculales,Phaeodactylaceae,Phaeodactylum,tricornutum", "Heterokonta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("None", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("unclassified", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("Unclassified ", "Unclassified", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", snorm$Taxonomy)
snorm$Taxonomy <- gsub("UnclassifiedUnclassified", "Unclassified", snorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = snorm, mean)
wide_snorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_snorm) <- wide_snorm$Taxonomy
wide_snorm <- wide_snorm[, 2:dim(wide_snorm)[2]]
wide_snorm <- wide_snorm[which(rowSums(wide_snorm) > 3000),]
spark_phyla <- data.frame(Taxonomy = rownames(wide_snorm), Sums = rowSums(wide_snorm))
spark_phyla
spark_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Arthropoda", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Phaeophyceae", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Streptophyta", "TM7", "Unclassified", "Verrucomicrobia", "Viruses")
c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Arthropoda", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Phaeophyceae", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Streptophyta", "TM7", "Unclassified", "Verrucomicrobia", "Viruses")
spark_phyla$Taxonomy
spark_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Arthropoda", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Crenarchaeota", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Firmicutes", "Elusimicrobia", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Phaeophyceae", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Streptophyta", "TM7", "Unclassified", "Verrucomicrobia", "Viruses")
unclassified <- spark_phyla[which(spark_phyla$Taxonomy == "Unclassified"), ]
spark_phyla <- spark_phyla[which(spark_phyla$Taxonomy != "Unclassified"), ]
spark_phyla <- rbind(spark_phyla, c("Unclassified", sum(unclassified$Sums)))
spark_phyla$Sums <- as.numeric(spark_phyla$Sums)
spark_phyla <- spark_phyla[which(spark_phyla$Taxonomy != "standard"), ]
spark_phyla$Taxonomy <- factor(spark_phyla$Taxonomy, levels = spark_phyla$Taxonomy[order(spark_phyla$Sums, decreasing = T)])
spark_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Animals", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria",  "Algae", "Algae", "Bacteria", "Algae", "Bacteria", "Bacteria", "Bacteria", "Algae", "Bacteria", "Viruses", "Unclassified")
snorm$Taxonomy <- gsub("Candidatus Saccharibacteria", "TM7", snorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = snorm, mean)
wide_snorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_snorm) <- wide_snorm$Taxonomy
wide_snorm <- wide_snorm[, 2:dim(wide_snorm)[2]]
wide_snorm <- wide_snorm[which(rowSums(wide_snorm) > 3000),]
spark_phyla <- data.frame(Taxonomy = rownames(wide_snorm), Sums = rowSums(wide_snorm))
spark_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Arthropoda", "Bacteroidetes", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Crenarchaeota", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Firmicutes", "Elusimicrobia", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Phaeophyceae", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Streptophyta", "TM7", "Unclassified", "Verrucomicrobia", "Viruses")
unclassified <- spark_phyla[which(spark_phyla$Taxonomy == "Unclassified"), ]
spark_phyla <- spark_phyla[which(spark_phyla$Taxonomy != "Unclassified"), ]
spark_phyla <- rbind(spark_phyla, c("Unclassified", sum(unclassified$Sums)))
spark_phyla$Sums <- as.numeric(spark_phyla$Sums)
spark_phyla <- spark_phyla[which(spark_phyla$Taxonomy != "standard"), ]
spark_phyla$Taxonomy <- factor(spark_phyla$Taxonomy, levels = spark_phyla$Taxonomy[order(spark_phyla$Sums, decreasing = T)])
spark_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Animals", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria",  "Algae", "Algae", "Bacteria", "Algae", "Bacteria", "Bacteria", "Bacteria", "Algae", "Bacteria", "Viruses", "Unclassified")
ggplot(spark_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Sparkling Lake Metatranscriptomes")
p <- ggplot(spark_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Sparkling Lake Metatranscriptomes")
save_plot("C:/Users/Alex/Desktop/geodes/Plots/spark_expression_by_phyla_reclassified_2018-03-03.pdf", p, base_height = 5, base_aspect_ratio = 1.5)
trout_phyla
spark_phyla
spark_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Animals", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria",  "Algae", "Algae", "Bacteria", "Algae", "Bacteria", "Bacteria", "Bacteria", "Algae", "Bacteria", "Bacteria", "Viruses", "Unclassified")
ggplot(spark_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Sparkling Lake Metatranscriptomes")
p <- ggplot(spark_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Sparkling Lake Metatranscriptomes")
save_plot("C:/Users/Alex/Desktop/geodes/Plots/spark_expression_by_phyla_reclassified_2018-03-03.pdf", p, base_height = 5, base_aspect_ratio = 1.5)
