genesearch("Trout", "fuculose-phosphate")
genesearch("Trout", "glycoside hydrolase")
genesearch("Trout", "amylase")
genesearch("Trout", "cellulase")
genesearch("Trout", "xylanase")
genesearch("Trout", "sulfatase")
genesearch("Trout", "nitrogenase")
genesearch("Trout", "dissimilatory nitrate reductase")
genesearch("Trout", "dissimilatory nitrite reductase")
genesearch("Trout", "Dissimilatory nitrite reductase")
genesearch("Trout", "nitrite reductase")
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("E:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
genesearch("Mendota", "nitrite reductase")
genesearch("Trout", "nitric oxide reductase")
genesearch("Sparkling", "nitrogenase")
genesearch("Sparkling", "nitric oxide reductase")
genesearch("Sparkling", "nitrite reductase")
genesearch("Sparkling", "quinone oxidoreductase")
genesearch("Sparkling", "flavocytochrome c")
genesearch("Sparkling", "sox|SOX|Sox")
genesearch("Trout", "quinone oxidoreductase")
genesearch("Trout", "flavocytochrome c")
genesearch("Trout", "sox|SOX|Sox")
genesearch("Sparkling", "sulfate adenylyltransferase")
genesearch("Sparkling", "phosphosulfate reductase")
genesearch("Trout", "sulfate adenylyltransferase")
genesearch("Trout", "phosphosulfate reductase")
genesearch("Sparkling", "sulfite reductase")
genesearch("Mendota", "sulfite reductase")
genesearch("Trout", "sulfite reductase")
genesearch("Mendota", "sulfate reductase")
genesearch("Sparkling", "sulfate reductase")
genesearch("Trout", "sulfate reductase")
library(ggplot2)
library(cowplot)
library(reshape2)
library(GeneCycle)
snorm <- read.csv("E:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("E:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("E:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("E:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("E:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
library(ggplot2)
library(cowplot)
library(reshape2)
library(GeneCycle)
snorm <- read.csv("E:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("E:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("E:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("E:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("E:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
genesearch <- function(lake, gene){
if(lake == "Mendota"){
reads <- mnorm
key <- mendota_key
}else if(lake == "Sparkling"){
reads <- snorm
key <- spark_key
}else if(lake == "Trout"){
reads <- tnorm
key <- trout_key
}
search_genes <- key$Gene[grep(gene, key$Product)]
search_reads <- reads[match(search_genes, rownames(reads)),]
search_reads$Genes <- rownames(search_reads)
search_reads <- melt(search_reads)
search_reads$variable <- gsub(".nonrRNA", "", search_reads$variable)
search_reads$Timepoint <- metadata$Timepoint[match(search_reads$variable, metadata$Sample)]
averaged_search <- aggregate(value ~ Genes + Timepoint, data = search_reads, mean)
averaged_search$Taxonomy <- key$Taxonomy[match(averaged_search$Genes, key$Gene)]
taxon_search <- aggregate(value ~ Taxonomy, data = averaged_search, sum)
head(taxon_search[order(taxon_search$value, decreasing = T),],5)
}
genesearch("Mendota", "cobalamin")
genesearch <- function(lake, gene){
if(lake == "Mendota"){
reads <- mnorm
key <- mendota_key
}else if(lake == "Sparkling"){
reads <- snorm
key <- spark_key
}else if(lake == "Trout"){
reads <- tnorm
key <- trout_key
}
search_genes <- key$Gene[grep(gene, key$Product)]
search_reads <- reads[match(search_genes, rownames(reads)),]
search_reads$Genes <- rownames(search_reads)
search_reads <- melt(search_reads)
search_reads$variable <- gsub(".nonrRNA", "", search_reads$variable)
search_reads$Timepoint <- metadata$Timepoint[match(search_reads$variable, metadata$Sample)]
averaged_search <- aggregate(value ~ Genes + Timepoint, data = search_reads, mean)
averaged_search$Taxonomy <- key$Taxonomy[match(averaged_search$Genes, key$Gene)]
taxon_search <- aggregate(value ~ Taxonomy, data = averaged_search, sum)
head(taxon_search[order(taxon_search$value, decreasing = T),],10)
}
genesearch("Mendota", "cobalamin")
lake = "Mendota"
gene = "cobalamin"
if(lake == "Mendota"){
reads <- mnorm
key <- mendota_key
}else if(lake == "Sparkling"){
reads <- snorm
key <- spark_key
}else if(lake == "Trout"){
reads <- tnorm
key <- trout_key
}
search_genes <- key$Gene[grep(gene, key$Product)]
head(key$Product[grep(gene, key$Product)])
unique(key$Product[grep(gene, key$Product)])
genesearch("Mendota", "cobalamin biosynth|cobalamin-5'-phosphate")
genesearch("Sparkling", "cobalamin biosynth|cobalamin-5'-phosphate")
genesearch("Trout", "cobalamin biosynth|cobalamin-5'-phosphate")
genesearch("Mendota", "ABC-type cobalamin|cobalamin receptor")
genesearch("Sparkling", "ABC-type cobalamin|cobalamin receptor")
genesearch("Trout", "ABC-type cobalamin|cobalamin receptor")
trout_cobal <- trout_key[grep("cobalamin biosynth", trout_key$Product),]
trout_cobal
library(ggplot2)
library(cowplot)
library(reshape2)
library(GeneCycle)
library(WGCNA)
allowWGCNAThreads()
enableWGCNAThreads()
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("E:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
#tnorm <- read.csv("E:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("E:/geodes_data_tables/Mendota_ID90_genekey.csv", header = T)
#spark_key <- read.csv("E:/geodes_data_tables/Sparkling_ID90_genekey.csv", header = T)
#trout_key <- read.csv("E:/geodes_data_tables/Trout_ID90_genekey.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
### Load packages
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads(nThreads = 8)
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("D:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
#tnorm <- read.csv("D:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
#spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
#trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
snorm <- read.csv("E:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("E:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("E:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("E:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("E:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
abun_mnorm <- mnorm[which(rowSums(mnorm) > (dim(mnorm)[2] * 1000)), ]
library(WGCNA)
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads(nThreads = 4)
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("E:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
#tnorm <- read.csv("E:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("E:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
#tnorm <- read.csv("E:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("E:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
std_err <- function(x) (sd(x)/sqrt(length(x)))/mean(x) * 100
#Blockwise standard error
part <- mnorm[1:500,000, ]
err_mnorm <- aggregate(value ~ Genes + Timepoint, data = abun_mnorm, std_err)
err_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, std_err)
abun_mnorm <- mnorm[which(rowSums(mnorm) > (dim(mnorm)[2] * 1000)), ]
rm(mnorm)
abun_mnorm$Genes <- rownames(abun_mnorm)
abun_mnorm <- melt(abun_mnorm)
abun_mnorm$variable <- gsub(".nonrRNA", "", abun_mnorm$variable)
abun_mnorm$Timepoint <- metadata$Timepoint[match(abun_mnorm$variable, metadata$Sample)]
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads(nThreads = 4)
install.packages("stringi")
library(reshape2)
library(WGCNA)
allowWGCNAThreads(nThreads = 4)
head(abun_mnorm)
abun_mnorm <- melt(abun_mnorm)
abun_mnorm$variable <- gsub(".nonrRNA", "", abun_mnorm$variable)
abun_mnorm$Timepoint <- metadata$Timepoint[match(abun_mnorm$variable, metadata$Sample)]
#Blockwise standard error
part <- abun_mnorm[1:500,000, ]
err_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, std_err)
head(abun_mnorm)
head(part)
#Blockwise standard error
part <- abun_mnorm[1:500000, ]
err_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, std_err)
head(err_mnorm)
part[which(part$Genes == "A023D18DRAFT_00000010_2236661009"), ]
#Blockwise standard error
part <- abun_mnorm[which(abun_norm$Timepoint == 0), ]
part <- abun_mnorm[which(abun_mnorm$Timepoint == 0), ]
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
head(err_mnorm)
std_err <- function(x) (sem(x)/mean(x) * 100
std_err <- function(x) sem(x)/mean(x) * 100
std_err <- function(x) sem(x)/mean(x) * 100
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
std_err <- function(x) (sd(x)/sqrt(length(x)))/mean(x) * 100
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
hist(err_mnorm$value)
std_err <- function(x) mean(x) - (sd(x)/sqrt(length(x)))/mean(x) * 1.96
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
head(err_mnorm)
hist(err_mnorm$value)
length(which(err_mnorm$value < 0))
std_err <- function(x) (sd(x)/sqrt(length(x)))/mean(x) * 100
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
length(which(err_mnorm$value == 100))/dim(err_mnorm)[1]
length(which(err_mnorm$value == 50))/dim(err_mnorm)[1]
length(which(err_mnorm$value < 50))/dim(err_mnorm)[1]
length(which(err_mnorm$value < 75))/dim(err_mnorm)[1]
keep_genes <- err_mnorm$Genes[which(err_mnorm$value < 50)]
unique(metadata$Timepoint)
head(keep_genes)
keep <- head(keep_genes)
keep %in% keep_genes
keep_genes %in% keep
which((keep_genes %in% keep) == T)
keep_genes[which((keep_genes %in% keep) == T)]
#How much did that remove?
length(keep_genes)/dim(abun_mnorm)[1] * 100
part <- abun_mnorm[which(abun_mnorm$Timepoint == 0), ]
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
threshold = 75
keep_genes <- err_mnorm$Genes[which(err_mnorm$value < threshold)]
timepoints <- c(4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44)
for(i in 1:length(timepoints)){
part <- abun_mnorm[which(abun_mnorm$Timepoint == timepoints[i]), ]
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
keep <- err_mnorm$Genes[which(err_mnorm$value < threshold)]
keep_genes <- keep_genes[which((keep_genes %in% keep) == T)]
}
#How much did that remove?
length(keep_genes)/dim(abun_mnorm)[1] * 100
part <- abun_mnorm[which(abun_mnorm$Timepoint == 0), ]
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
threshold = 100
keep_genes <- err_mnorm$Genes[which(err_mnorm$value < threshold)]
timepoints <- c(4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44)
for(i in 1:length(timepoints)){
part <- abun_mnorm[which(abun_mnorm$Timepoint == timepoints[i]), ]
err_mnorm <- aggregate(value ~ Genes, data = part, std_err)
keep <- err_mnorm$Genes[which(err_mnorm$value < threshold)]
keep_genes <- keep_genes[which((keep_genes %in% keep) == T)]
}
#How much did that remove?
length(keep_genes)/dim(abun_mnorm)[1] * 100
agg_abun_mnorm <- aggregate(value ~ Genes + Timepoint, data = abun_mnorm, mean)
rm(err_mnorm)
rm(keep)
rm(keep_genes)
#Blockwsie aggregation
part <- abun_mnorm[1:499999, ]
agg_abun_mnorm <- aggregate(value ~ Genes, data = part, mean)
where <- seq(500000, dim(abun_mnorm)[1], 500000)
head(agg_abun_mnorm)
agg_abun_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, mean)
where
for(i in 1:length(where)){
part <- abun_mnorm[where[i]:(where[i]+499999), ]
aggpart <- aggregate(value ~ Genes + Timepoint, data = part, mean)
agg_abun_mnorm <- rbind(agg_abun_mnorm, aggpart)
}
i
art <- abun_mnorm[1:249999, ]
agg_abun_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, mean)
part <- abun_mnorm[1:249999, ]
agg_abun_mnorm <- aggregate(value ~ Genes + Timepoint, data = part, mean)
where <- seq(250000, dim(abun_mnorm)[1], 250000)
for(i in 1:length(where)){
part <- abun_mnorm[where[i]:(where[i]+249999), ]
aggpart <- aggregate(value ~ Genes + Timepoint, data = part, mean)
agg_abun_mnorm <- rbind(agg_abun_mnorm, aggpart)
}
part <- abun_mnorm[max(where):dim(abun_mnorm)[1], ]
agg_abun_mnorm <- aggregate(value ~ Genes, data = part, mean)
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads(nThreads = 4)
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("D:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
#tnorm <- read.csv("D:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
#spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
#trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
head(mendota_key)
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
searchterm <- "alkaline phosphatase|Alkaline phosphatase|phosphatase, alkaline"
|ammonia monooxygenase|ammonia/methane monooxygenase|monoxygenase, ammonia|Ammonia monooxygenase|Ammonia onooxygenase|Ammonia/methane monoxygenase|nitrogenase|Nitrogenase|nif|phytase|Phytase|butyrate kinase|Butyrate kinase|kinase, butyrate|butyryl-CoA transferase|Butyryl-CoA transferase|Propionyl-CoA:succinate CoA transferase|propionyl-CoA:succinate CoA transferase|4-hydroxybutyrate coenzyme A transferase|acetyl-CoA hydrolase|acetyl-CoA transferase|Propionyl-CoA/succinate CoA transferase|propionyl-CoA/succinate CoA transferase|Acetyl-CoA hydrolase|Acetyl-CoA transferase|
marker_genes <- mendota_key[grep(searchterm, mendota_key$Product), ]
|ammonia monooxygenase|ammonia/methane monooxygenase|monoxygenase, ammonia|Ammonia monooxygenase|Ammonia onooxygenase|Ammonia/methane monoxygenase|nitrogenase|Nitrogenase|nif|phytase|Phytase|butyrate kinase|Butyrate kinase|kinase, butyrate|butyryl-CoA transferase|Butyryl-CoA transferase|Propionyl-CoA:succinate CoA transferase|propionyl-CoA:succinate CoA transferase|4-hydroxybutyrate coenzyme A transferase|acetyl-CoA hydrolase|acetyl-CoA transferase|Propionyl-CoA/succinate CoA transferase|propionyl-CoA/succinate CoA transferase|Acetyl-CoA hydrolase|Acetyl-CoA transferase|
marker_genes <- mendota_key[grep(searchterm, mendota_key$Product, value = T), ]
searchterm
|ammonia monooxygenase|ammonia/methane monooxygenase|monoxygenase, ammonia|Ammonia monooxygenase|Ammonia onooxygenase|Ammonia/methane monoxygenase|nitrogenase|Nitrogenase|nif|phytase|Phytase|butyrate kinase|Butyrate kinase|kinase, butyrate|butyryl-CoA transferase|Butyryl-CoA transferase|Propionyl-CoA:succinate CoA transferase|propionyl-CoA:succinate CoA transferase|4-hydroxybutyrate coenzyme A transferase|acetyl-CoA hydrolase|acetyl-CoA transferase|Propionyl-CoA/succinate CoA transferase|propionyl-CoA/succinate CoA transferase|Acetyl-CoA hydrolase|Acetyl-CoA transferase|
marker_genes <- mendota_key[grep(searchterm, mendota_key$Product, fixed = T), ]
marker_genes <- mendota_key[grep(searchterm, mendota_key$Product), ]
hea(marker_genes)
head(marker_genes)
unique(marker_genes$Product)
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "ammonia monooxygenase|ammonia/methane monooxygenase|monoxygenase, ammonia|Ammonia monooxygenase|Ammonia onooxygenase|Ammonia/methane monoxygenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "nitrogenase|Nitrogenase|nif"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "nitrogenase|Nitrogenase|Nif"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "phytase|Phytase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "butyrate kinase|Butyrate kinase|kinase, butyrate|butyryl-CoA transferase|Butyryl-CoA transferase|Propionyl-CoA:succinate CoA transferase|propionyl-CoA:succinate CoA transferase|4-hydroxybutyrate coenzyme A transferase|acetyl-CoA hydrolase|acetyl-CoA transferase|Propionyl-CoA/succinate CoA transferase|propionyl-CoA/succinate CoA transferase|Acetyl-CoA hydrolase|Acetyl-CoA transferase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "butyrate"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "cellobiohydrolase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "Cellobiohydrolase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "hitobiase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "chitinase|Chitinase|glycoside hydrolase|Glycoside hydrolase|glucoside hydrolase|Glucoside hydrolase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "carbon monoxide dehydrogenase|Carbon monoxide dehydrogenase|carbon-monoxide dehydrogenase|Carbon-monoxide dehydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "cytochrome d terminal oxidase|Cytochrome d terminal oxidase|cytochrome D terminal oxidase|Cytochrome D terminal oxidase|cytochrome d ubiquinol oxidase|Cytochrome d ubiquinol oxidase|cytochrome D ubiquinol oxidase|Cytochrome D ubiquinol oxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "cytochrome bd|Cytochrome bd|cytochrome BD|Cytochrome BD"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "sulfite reductase|Sulfite reductase|Sulfite Reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "sulfite reductase|Sulfite reductase|sulfite/nitrate reductase|Sulfite/nitrate reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "glucosaminidase|hexosaminidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "cytochrome c oxidase|Cytochrome c oxidase|Cytochrome C oxidase|cytochrome C oxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "cytochrome c oxidase|Cytochrome c oxidase|Cytochrome C oxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "peptidase|Peptidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "Glyoxaloxidase|glyoxaloxidase|radical oxidase|glyoxal oxidase|Glyoxal oxidase|galactose oxidase|Galactose oxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "Histidine phosphatase|histidine acid phosphatase|phosphoanhydride phosphohydrolase|histidine phosphatase|Histidine acid phosphatase|Phosphoanhydride phosphohydrolase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "iron hydrogenase|Iron hydrogenase|ferredoxin|Ferredoxin|hydrogenase, Fe-only|Fe-only hydrogenase|[FeFe]-hydrogenase|Fe-hydrogenase|[Fe] hydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "iron hydrogenase|Iron hydrogenase|ferredoxin|Ferredoxin|hydrogenase, Fe-only|Fe-only hydrogenase|//[FeFe]-hydrogenase|Fe-hydrogenase|//[Fe] hydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "iron hydrogenase|Iron hydrogenase|ferredoxin|Ferredoxin|hydrogenase, Fe-only|Fe-only hydrogenase|\\[FeFe\\]-hydrogenase|Fe-hydrogenase|\\[Fe\\] hydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "iron hydrogenase|Iron hydrogenase|ferredoxin|Ferredoxin|hydrogenase, Fe-only|Fe-only hydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "laccase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "beta-ether hydrolase|betaether hydrolase|Glutathione S-transferase|glutathione S-transferase|ether cleaving|ether-cleaving"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "ligninase|lignin peroxidase|Lignin peroxidase|manganese peroxidase|Mn peroxidase|Manganese peroxidase|versatile peroxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "methyl-coenzyme M reductase|methylcoenzyme M reductase|Methyl-coenzyme M reductase|Methylcoenzyme M reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "coenzyme M reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "methane monooxygenase|Methane monooxygenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "manganese-dependent peroxidase|Manganese-dependent peroxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "nitrate reductase|Nitrate reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "nitric oxide reductase|Nitric oxide reductase|quinol oxidase|Quinol oxidase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "nitrous oxide reductase|Nitrous oxide reductase|nitrous-oxide reductase|Nitrous-oxide reductase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "Bacillolysin|bacillolysin|Thermolysin|thermolysin"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "Bacillolysin|bacillolysin|Thermolysin|thermolysin|Fungalysin|fungalysin|protease"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "serine/threonine protein phosphatase|Serine/threonine protein phosphatase|Ser/Thr protein phosphatase|threonine/serine protein phosphatase|Threonine/serine protein phosphatase|Thr/Ser protein phosphatase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "phosphonoacetaldehyde dehydrogenase|phosphonoacetate hydrolase|glyceraldehyde-3-phosphate dehydrogenase|lactaldehyde dehydrogenase|aldehyde dehydrogenase|Phosphonoacetaldehyde dehydrogenase|Phosphonoacetate hydrolase|Glyceraldehyde-3-phosphate dehydrogenase|Lactaldehyde dehydrogenase|Aldehyde dehydrogenase"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "sox|Sox|sulfate thiol esterase|sulfur oxidation"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
# Pull out genes encoding functional markers - annotations pulled from fungenes biogeochemical cycling section
testsearchterm <- "sox|Sox|sulfate thiol esterase|sulfur oxidation|Sulfur oxidation|sulfur-oxidizing|Sulfur-oxidizing"
marker_genes <- mendota_key[grep(testsearchterm, mendota_key$Product), ]
unique(as.character(marker_genes$Product))
searchterm <- "alkaline phosphatase|Alkaline phosphatase|ammonia monooxygenase|nitrogenase|Nitrogenase|Nif|phytase|Phytase|acetyl-CoA hydrolase|Acetyl-CoA hydrolase|4-hydroxybutyrate CoA-transferase|Chitobiase|chitobiase|chitinase|Chitinase|glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase|carbon monoxide dehydrogenase|Carbon monoxide dehydrogenase|carbon-monoxide dehydrogenase|Carbon-monoxide dehydrogenase|sulfite reductase|Sulfite reductase|glucosaminidase|hexosaminidase|cytochrome|Cytochrome|peptidase|Peptidase|glyoxal oxidase|Glyoxal oxidase|galactose oxidase|Galactose oxidase|Histidine phosphatase|histidine phosphatase|iron hydrogenase|Iron hydrogenase|ferredoxin|Ferredoxin|hydrogenase, Fe-only|Fe-only hydrogenase|laccase|Glutathione S-transferase|glutathione S-transferase|ligninase|lignin peroxidase|Lignin peroxidase|manganese peroxidase|Mn peroxidase|Manganese peroxidase|coenzyme M reductase|methane monooxygenase|Methane monooxygenase|nitrate reductase|Nitrate reductase|nitrite reductase|Nitrite reductase|nitric oxide reductase|Nitric oxide reductase|quinol oxidase|Quinol oxidase|nitrous oxide reductase|Nitrous oxide reductase|nitrous-oxide reductase|Nitrous-oxide reductase|Bacillolysin|bacillolysin|Thermolysin|thermolysin|Fungalysin|fungalysin|protease|nitrate oxidoreductase|Nitrate oxidoreductase|nitrite oxidoreductase|Nitrite oxidoreductase|serine/threonine protein phosphatase|Serine/threonine protein phosphatase|Ser/Thr protein phosphatase|phosphonoacetaldehyde dehydrogenase|phosphonoacetate hydrolase|glyceraldehyde-3-phosphate dehydrogenase|lactaldehyde dehydrogenase|aldehyde dehydrogenase|Phosphonoacetaldehyde dehydrogenase|Phosphonoacetate hydrolase|Glyceraldehyde-3-phosphate dehydrogenase|Lactaldehyde dehydrogenase|Aldehyde dehydrogenase|phosphodiesterase|Phosphodiesterase|phenoloxidase|Phenoloxidase|sox|Sox|sulfate thiol esterase|sulfur oxidation|Sulfur oxidation|sulfur-oxidizing|Sulfur-oxidizing|serine protease|urease|xylose isomerase|Xylose isomerase"
marker_genes <- mendota_key[grep(searchterm, mendota_key$Product), ]
