colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data[c(15, 22, 42), ]
which(is.na(tag_data$phylum_names) == T)
dim(tag_data)
head(tag_data)
unique(tag_data$phylum_names)
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
# Keep phyla and match order to the MAGs plot, then add a few of the most abundant or so
# Which are most abundant?
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Cryptophyta" | tag_data$phylum_names == "stramenopiles" | tag_data$phylum_names == "Firmicutes"| tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
tag_data$phylum_names[which(tag_data$phylum_names == "stramenopiles")] <- "Heterokonta"
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonbacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia", "Cryptophyta", "Heterokonta", "Firmicutes"))
ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
tag_data
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
tag_data
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Cryptophyta" | tag_data$phylum_names == "stramenopiles" | tag_data$phylum_names == "Firmicutes"| tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
tag_data$phylum_names[which(tag_data$phylum_names == "stramenopiles")] <- "Heterokonta"
tag_data
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
tag_data
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonbacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia", "Cryptophyta", "Heterokonta", "Firmicutes"))
ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
Mendota_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
Mendota_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/ME.sampledata.filtered.tsv", sep = "\t", header = T)
Mendota_dates$sample <- as.character(Mendota_dates$sample)
metadata <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
TE_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_epi.sample_data.filtered.txt", header = T, sep = "\t")
TE_dates$sample <- as.character(TE_dates$sample)
TH_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_hyp.sample_data.filtered.txt", header = T, sep = "\t")
TH_dates$sample <- as.character(TH_dates$sample)
# Normalize (reads per kilobase MAG per million reads)
# general form: RPKM =   numReads / ( genomeLength/1000 * totalNumReads/1,000,000 )
# but technically we're not calling it RPKM because that number is meant for genomes, not metagenomes
size_vector <- metadata$Genome_Size[match(Mendota_raw_input$V1, metadata$IMG_OID)]
Mendota_RPKM <- Mendota_raw_input$V3/(size_vector/1000 * Mendota_raw_input$V4/1000000)
ME_results <- data.frame(Mendota_raw_input[,1:2], Mendota_RPKM)
colnames(ME_results) <- c("MAG", "metaG", "RPKM")
ME_results$Date <- as.Date(Mendota_dates$date[match(ME_results$metaG, Mendota_dates$sample)], format = "%m/%d/%y")
ME_results$Julian_Date <- as.numeric(format(ME_results$Date, "%j"))
ME_results <- ME_results[which(is.na(ME_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TE_raw_input$V1, metadata$IMG_OID)]
TE_RPKM <- TE_raw_input$V3/(size_vector/1000 * TE_raw_input$V4/1000000)
TE_results <- data.frame(TE_raw_input[,1:2], TE_RPKM)
colnames(TE_results) <- c("MAG", "metaG", "RPKM")
TE_results$Date <- as.Date(TE_dates$date[match(TE_results$metaG, TE_dates$sample)], format = "%m/%d/%y")
TE_results$Julian_Date <- as.numeric(format(TE_results$Date, "%j"))
TE_results <- TE_results[which(is.na(TE_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TH_raw_input$V1, metadata$IMG_OID)]
TH_RPKM <- TH_raw_input$V3/(size_vector/1000 * TH_raw_input$V4/1000000)
TH_results <- data.frame(TH_raw_input[,1:2], TH_RPKM)
colnames(TH_results) <- c("MAG", "metaG", "RPKM")
TH_results$Date <- as.Date(TH_dates$date[match(TH_results$metaG, TH_dates$sample)], format = "%m/%d/%y")
TH_results$Julian_Date <- as.numeric(format(TH_results$Date, "%j"))
TH_results <- TH_results[which(is.na(TH_results$Date) == F),]
# Get taxonomy
metadata$phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
metadata$phylum
# Switch Proteobacteria to class
metadata$phylum[which(metadata$phylum == "Proteobacteria")] <- sapply(strsplit(as.character(metadata$Taxonomy[which(metadata$phylum == "Proteobacteria")]),";"), `[`, 2)
metadata$phylum
E_results$phylum <- metadata$phylum[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$phylum <- metadata$phylum[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$phylum <- metadata$phylum[match(TH_results$MAG, metadata$IMG_OID)]
ME_results$Taxonomy <- metadata$Taxonomy[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$Taxonomy <- metadata$Taxonomy[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$Taxonomy <- metadata$Taxonomy[match(TH_results$MAG, metadata$IMG_OID)]
# Aggregate by phylum
agg_ME_phyla <- aggregate(RPKM ~ phylum, data = ME_results, mean)
agg_TE_phyla <- aggregate(RPKM ~ phylum, data = TE_results, mean)
agg_TH_phyla <- aggregate(RPKM ~ phylum, data = TH_results, mean)
agg_phyla <- rbind(agg_ME_phyla, agg_TE_phyla, agg_TH_phyla)
agg_phyla$Lake <- c(rep("Mendota", dim(agg_ME_phyla)[1]), rep("Trout Bog Epilimnion", dim(agg_TE_phyla)[1]), rep("Trout Bog Hypolimnion", dim(agg_TH_phyla)[1]))
# Remove unclassified
agg_phyla <- agg_phyla[grep("Blank", agg_phyla$phylum, invert = T), ]
# Add zero counts
phyla <- unique(agg_phyla$phylum)
lakes <- unique(agg_phyla$Lake)
for(i in 1:length(phyla)){
for(j in 1:length(lakes)){
hits <- which(agg_phyla$phylum == phyla[i] & agg_phyla$Lake == lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, lakes[j])
agg_phyla <- rbind(agg_phyla, newrow)
}
}
}
agg_phyla$RPKM <- as.numeric(agg_phyla$RPKM)
agg_phyla$RPKM[which(agg_phyla$RPKM > 4)] <- 3.5
ME_results$phylum <- metadata$phylum[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$phylum <- metadata$phylum[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$phylum <- metadata$phylum[match(TH_results$MAG, metadata$IMG_OID)]
ME_results$Taxonomy <- metadata$Taxonomy[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$Taxonomy <- metadata$Taxonomy[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$Taxonomy <- metadata$Taxonomy[match(TH_results$MAG, metadata$IMG_OID)]
# Aggregate by phylum
agg_ME_phyla <- aggregate(RPKM ~ phylum, data = ME_results, mean)
agg_TE_phyla <- aggregate(RPKM ~ phylum, data = TE_results, mean)
agg_TH_phyla <- aggregate(RPKM ~ phylum, data = TH_results, mean)
agg_phyla <- rbind(agg_ME_phyla, agg_TE_phyla, agg_TH_phyla)
agg_phyla$Lake <- c(rep("Mendota", dim(agg_ME_phyla)[1]), rep("Trout Bog Epilimnion", dim(agg_TE_phyla)[1]), rep("Trout Bog Hypolimnion", dim(agg_TH_phyla)[1]))
# Remove unclassified
agg_phyla <- agg_phyla[grep("Blank", agg_phyla$phylum, invert = T), ]
# Add zero counts
phyla <- unique(agg_phyla$phylum)
lakes <- unique(agg_phyla$Lake)
for(i in 1:length(phyla)){
for(j in 1:length(lakes)){
hits <- which(agg_phyla$phylum == phyla[i] & agg_phyla$Lake == lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, lakes[j])
agg_phyla <- rbind(agg_phyla, newrow)
}
}
}
agg_phyla$RPKM <- as.numeric(agg_phyla$RPKM)
agg_phyla$RPKM[which(agg_phyla$RPKM > 4)] <- 3.5
ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelB <- ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
panelA <- panelA + theme(legend.position = "none")
plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.85)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.85)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
unique(mendota_tags$phylum)
mendota_tags <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/Mendota_OTUtable.csv", header = T)
trout_tags <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/TroutBog_OTUtable.csv", header = T)
trout_tags[is.na(trout_tags)] <- 0
#Split Trout Bog data into epi and hypo
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
me_tags <- mendota_tags[, 10:dim(mendota_tags)[2]]
tbe_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "E")]
tbh_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "H")]
# Get phylum names - make sure to replace Proteobacteria names with class instead
me_phyla <- as.character(mendota_tags$phylum)
tb_phyla <- as.character(trout_tags$phylum)
me_phyla[which(me_phyla == "p__Proteobacteria")] <- as.character(mendota_tags$class[which(me_phyla == "p__Proteobacteria")])
tb_phyla[which(tb_phyla == "p__Proteobacteria")] <- as.character(trout_tags$class[which(tb_phyla == "p__Proteobacteria")])
me_tags$phyla <- me_phyla
tbe_tags$phyla <- tbh_tags$phyla <- tb_phyla
me_tags <- melt(me_tags)
me_tags <- aggregate(value ~ variable + phyla, me_tags, sum)
me_tags <- reshape(me_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(me_tags) <- me_tags$phyla
me_tags <- me_tags[, 2:dim(me_tags)[2]]
tbe_tags <- melt(tbe_tags)
tbe_tags <- aggregate(value ~ variable + phyla, tbe_tags, sum)
tbe_tags <- reshape(tbe_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbe_tags) <- tbe_tags$phyla
tbe_tags <- tbe_tags[, 2:dim(tbe_tags)[2]]
tbh_tags <- melt(tbh_tags)
tbh_tags <- aggregate(value ~ variable + phyla, tbh_tags, sum)
tbh_tags <- reshape(tbh_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbh_tags) <- tbh_tags$phyla
tbh_tags <- tbh_tags[, 2:dim(tbh_tags)[2]]
# Get average % of community for each phylum, and switch to long format
mendota_tag_totals <- rowSums(me_tags)/dim(me_tags)[2]
tbe_tag_totals <- rowSums(tbe_tags)/dim(tbe_tags)[2]
tbh_tag_totals <- rowSums(tbh_tags)/dim(tbh_tags)[2]
phylum_names <- c(rownames(me_tags), rownames(tbe_tags), rownames(tbh_tags))
phylum_percents <- c(mendota_tag_totals, tbe_tag_totals, tbh_tag_totals)
phylum_lake <- c(rep("Mendota", length(mendota_tag_totals)), rep("Trout Bog Epilimnion", length(tbe_tag_totals)), rep("Trout Bog Hypolimnion", length(tbh_tag_totals)))
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
# Keep phyla and match order to the MAGs plot, then add a few of the most abundant or so
# Which are most abundant?
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonbacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia"))
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelA
Mendota_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
Mendota_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/ME.sampledata.filtered.tsv", sep = "\t", header = T)
Mendota_dates$sample <- as.character(Mendota_dates$sample)
metadata <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
TE_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_epi.sample_data.filtered.txt", header = T, sep = "\t")
TE_dates$sample <- as.character(TE_dates$sample)
TH_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_hyp.sample_data.filtered.txt", header = T, sep = "\t")
TH_dates$sample <- as.character(TH_dates$sample)
# Normalize (reads per kilobase MAG per million reads)
# general form: RPKM =   numReads / ( genomeLength/1000 * totalNumReads/1,000,000 )
# but technically we're not calling it RPKM because that number is meant for genomes, not metagenomes
size_vector <- metadata$Genome_Size[match(Mendota_raw_input$V1, metadata$IMG_OID)]
Mendota_RPKM <- Mendota_raw_input$V3/(size_vector/1000 * Mendota_raw_input$V4/1000000)
ME_results <- data.frame(Mendota_raw_input[,1:2], Mendota_RPKM)
colnames(ME_results) <- c("MAG", "metaG", "RPKM")
ME_results$Date <- as.Date(Mendota_dates$date[match(ME_results$metaG, Mendota_dates$sample)], format = "%m/%d/%y")
ME_results$Julian_Date <- as.numeric(format(ME_results$Date, "%j"))
ME_results <- ME_results[which(is.na(ME_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TE_raw_input$V1, metadata$IMG_OID)]
TE_RPKM <- TE_raw_input$V3/(size_vector/1000 * TE_raw_input$V4/1000000)
TE_results <- data.frame(TE_raw_input[,1:2], TE_RPKM)
colnames(TE_results) <- c("MAG", "metaG", "RPKM")
TE_results$Date <- as.Date(TE_dates$date[match(TE_results$metaG, TE_dates$sample)], format = "%m/%d/%y")
TE_results$Julian_Date <- as.numeric(format(TE_results$Date, "%j"))
TE_results <- TE_results[which(is.na(TE_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TH_raw_input$V1, metadata$IMG_OID)]
TH_RPKM <- TH_raw_input$V3/(size_vector/1000 * TH_raw_input$V4/1000000)
TH_results <- data.frame(TH_raw_input[,1:2], TH_RPKM)
colnames(TH_results) <- c("MAG", "metaG", "RPKM")
TH_results$Date <- as.Date(TH_dates$date[match(TH_results$metaG, TH_dates$sample)], format = "%m/%d/%y")
TH_results$Julian_Date <- as.numeric(format(TH_results$Date, "%j"))
TH_results <- TH_results[which(is.na(TH_results$Date) == F),]
# Get taxonomy
metadata$phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
# Switch Proteobacteria to class
metadata$phylum[which(metadata$phylum == "Proteobacteria")] <- sapply(strsplit(as.character(metadata$Taxonomy[which(metadata$phylum == "Proteobacteria")]),";"), `[`, 2)
ME_results$phylum <- metadata$phylum[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$phylum <- metadata$phylum[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$phylum <- metadata$phylum[match(TH_results$MAG, metadata$IMG_OID)]
ME_results$Taxonomy <- metadata$Taxonomy[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$Taxonomy <- metadata$Taxonomy[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$Taxonomy <- metadata$Taxonomy[match(TH_results$MAG, metadata$IMG_OID)]
# Aggregate by phylum
agg_ME_phyla <- aggregate(RPKM ~ phylum, data = ME_results, mean)
agg_TE_phyla <- aggregate(RPKM ~ phylum, data = TE_results, mean)
agg_TH_phyla <- aggregate(RPKM ~ phylum, data = TH_results, mean)
agg_phyla <- rbind(agg_ME_phyla, agg_TE_phyla, agg_TH_phyla)
agg_phyla$Lake <- c(rep("Mendota", dim(agg_ME_phyla)[1]), rep("Trout Bog Epilimnion", dim(agg_TE_phyla)[1]), rep("Trout Bog Hypolimnion", dim(agg_TH_phyla)[1]))
# Remove unclassified
agg_phyla <- agg_phyla[grep("Blank", agg_phyla$phylum, invert = T), ]
# Add zero counts
phyla <- unique(agg_phyla$phylum)
lakes <- unique(agg_phyla$Lake)
for(i in 1:length(phyla)){
for(j in 1:length(lakes)){
hits <- which(agg_phyla$phylum == phyla[i] & agg_phyla$Lake == lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, lakes[j])
agg_phyla <- rbind(agg_phyla, newrow)
}
}
}
agg_phyla$RPKM <- as.numeric(agg_phyla$RPKM)
agg_phyla$RPKM[which(agg_phyla$RPKM > 4)] <- 3.5
panelB <- ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
legend <- get_legend(panelA)
panelA <- panelA + theme(legend.position = "none")
panelB <- panelB + theme(legend.position = "none")
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"))
fig2
panelB <- panelB + theme(legend.position = "none")
fig2_nolegend
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2)
fig2
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel.widths = c(1, .1))
plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .1))
plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
me_tags <- mendota_tags[, 10:dim(mendota_tags)[2]]
tbe_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "E")]
tbh_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "H")]
# Get phylum names - make sure to replace Proteobacteria names with class instead
me_phyla <- as.character(mendota_tags$phylum)
tb_phyla <- as.character(trout_tags$phylum)
me_phyla[which(me_phyla == "p__Proteobacteria")] <- as.character(mendota_tags$class[which(me_phyla == "p__Proteobacteria")])
tb_phyla[which(tb_phyla == "p__Proteobacteria")] <- as.character(trout_tags$class[which(tb_phyla == "p__Proteobacteria")])
me_tags$phyla <- me_phyla
tbe_tags$phyla <- tbh_tags$phyla <- tb_phyla
me_tags <- melt(me_tags)
me_tags <- aggregate(value ~ variable + phyla, me_tags, sum)
me_tags <- reshape(me_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(me_tags) <- me_tags$phyla
me_tags <- me_tags[, 2:dim(me_tags)[2]]
tbe_tags <- melt(tbe_tags)
tbe_tags <- aggregate(value ~ variable + phyla, tbe_tags, sum)
tbe_tags <- reshape(tbe_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbe_tags) <- tbe_tags$phyla
tbe_tags <- tbe_tags[, 2:dim(tbe_tags)[2]]
tbh_tags <- melt(tbh_tags)
tbh_tags <- aggregate(value ~ variable + phyla, tbh_tags, sum)
tbh_tags <- reshape(tbh_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbh_tags) <- tbh_tags$phyla
tbh_tags <- tbh_tags[, 2:dim(tbh_tags)[2]]
# Get average % of community for each phylum, and switch to long format
mendota_tag_totals <- rowSums(me_tags)/dim(me_tags)[2]
tbe_tag_totals <- rowSums(tbe_tags)/dim(tbe_tags)[2]
tbh_tag_totals <- rowSums(tbh_tags)/dim(tbh_tags)[2]
phylum_names <- c(rownames(me_tags), rownames(tbe_tags), rownames(tbh_tags))
phylum_percents <- c(mendota_tag_totals, tbe_tag_totals, tbh_tag_totals)
phylum_lake <- c(rep("Mendota", length(mendota_tag_totals)), rep("Trout Bog Epilimnion", length(tbe_tag_totals)), rep("Trout Bog Hypolimnion", length(tbh_tag_totals)))
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
# Keep phyla and match order to the MAGs plot, then add a few of the most abundant or so
# Which are most abundant?
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonbacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia"))
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelA <- panelA + theme(legend.position = "none")
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"))
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
# Keep phyla and match order to the MAGs plot, then add a few of the most abundant or so
# Which are most abundant?
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonproteobacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia"))
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelA <- panelA + theme(legend.position = "none")
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"))
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelB <- ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
panelA <- panelA + theme(legend.position = "none")
panelB <- panelB + theme(legend.position = "none")
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"))
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.85)
fig2_nolegend
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h")
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", scale = 0.9)
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
