new_abun_mnorm <- new_abun_mnorm[, 2:dim(new_abun_mnorm)[2]]
head(new_abun_mnorm)
ave_by_timepoint <- melt(new_abun_mnorm)
head(ave_by_timepoint)
new_abun_mnorm$Genes <- rownames(new_abun_mnorm)
ave_by_timepoint <- melt(new_abun_mnorm)
head(ave_by_timepoint)
ave_by_timepoint$variable <- gsub("value.", "", ave_by_timepoint$variable)
str(ave_by_timepoint)
ave_by_timepoint <- melt(new_abun_mnorm)
ave_by_timepoint$variable <- as.numeric(gsub("value.", "", ave_by_timepoint$variable))
ave_by_timepoint$variable[which(ave_by_timepoint$variable >= 24)] <- ave_by_timepoint$variable[which(ave_by_timepoint$variable >= 24)] - 24
tail(ave_by_timepoint)
max(ave_by_timepoint$variable)
head(sig.mendota.key)
max_time <- c()
max_value <- c()
for(i in 1:dim(sig.mendota.key)[2]){
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Genes[i]),]
max_value[i] <- max(gene_table$value)
max_time[i] <- gene_table$variable[which(gene_table$value = max_value[i])]
}
max_time <- c()
max_value <- c()
for(i in 1:dim(sig.mendota.key)[2]){
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Genes[i]),]
max_value[i] <- max(gene_table$value)
max_time[i] <- gene_table$variable[which(gene_table$value == max_value[i])]
}
i
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Genes[i]),]
gene_table
sig.mendota.key$Genes[i]
max_time <- c()
max_value <- c()
for(i in 1:dim(sig.mendota.key)[2]){
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Gene[i]),]
max_value[i] <- max(gene_table$value)
max_time[i] <- gene_table$variable[which(gene_table$value == max_value[i])]
}
sig.mendota.key$MaxTime <- max_time
sig.mendota.key$MaxValue <- max_value
max_time <- c()
max_value <- c()
for(i in 1:dim(sig.mendota.key)[1]){
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Gene[i]),]
max_value[i] <- max(gene_table$value)
max_time[i] <- gene_table$variable[which(gene_table$value == max_value[i])]
}
head sig.mendota.key
head(sig.mendota.key)
cluster = "ME1"
head(eigenvectors)
# Make pretty plot of eigengenes
eigenvectors$Timepoint <- rownames(eigenvectors)
long_eigenvectors <- melt(eigenvectors)
plot.colors <- NA
plot.colors[which(long_eigenvectors$value > 0)] <- "green"
plot.colors[which(long_eigenvectors$value < 0)] <- "red"
long_eigenvectors$Sign <- plot.colors
long_eigenvectors$Timepoint <- factor(long_eigenvectors$Timepoint, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
cluster = "ME1"
ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
cluster = "ME2"
ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
cluster = "ME3"
ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
dim(eigenvectors)
for(i in 0:57){
cluster = paste("ME", i, sep = "")
p <- ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
print(p)
}
# Which clusters to plot?
clusters <- c(2, 3, 6, 7, 8, 13, 21, 25, 26, 30, 36, 37, 39, 47, 53, 55)
head(ave_by_timepoint)
plot.sig.mendota.key <- sig.mendota.key[match(clusters, sig.mendota.key$Cluster)]
plot.sig.mendota.key <- sig.mendota.key[match(clusters, sig.mendota.key$Cluster),]
plot.sig.mendota.key <- sig.mendota.key[match(sig.mendota.key$Cluster, clusters),]
plot.sig.mendota.key <- sig.mendota.key[which(sig.mendota.key$Cluster %in% clusters),]
head(plot.sig.mendota.key)
table(plot.sig.mendota.key$Cluster)
hist(plot.sig.mendota.key$Totals)
quantile(plot.sig.mendota.key$Totals)
sig.mendota.key$Taxonomy <- gsub("Bacteria;", "", sig.mendota.key$Taxonomy)
sig.mendota.key$Taxonomy <- gsub("Eukaryota;", "", sig.mendota.key$Taxonomy)
sig.mendota.key$Phylum <- sapply(strsplit(as.character(sig.mendota.key$Taxonomy),";"), `[`, 1)
sig.mendota.key$Phylum <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION MH", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION LP", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("None", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified Oligohymenophorea", "Ciliophora", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified Pelagophyceae", "Ochrophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Unclassified ", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("UnclassifiedIsochrysidales", "Haptophyta", sig.mendota.key$Phylum)
plot.sig.mendota.key <- sig.mendota.key[which(sig.mendota.key$Cluster %in% clusters),]
head(plot.sig.mendota.key)
table(plot.sig.mendota.key$Phylum)
# Keep only genes with some sort of information
plot.sig.mendota.key <- plot.sig.mendota.key[which(plot.sig.mendota.key$Phylum != "Unclassified" & plot.sig.mendota.key$Product != "hypothetical protein"), ]
max_time <- c()
max_value <- c()
for(i in 1:dim(plot.sig.mendota.key)[1]){
gene_table <- ave_by_timepoint[which(ave_by_timepoint$Genes == sig.mendota.key$Gene[i]),]
max_value[i] <- max(gene_table$value)
max_time[i] <- gene_table$variable[which(gene_table$value == max_value[i])]
}
plot.sig.mendota.key$MaxTime <- max_time
plot.sig.mendota.key$MaxValue <- max_value
head(plot.sig.mendota.key)
ggplot(data = plot.sig.mendota.key, aes(x = MaxTime, y = Cluster, fill = Phylum, size = MaxValue)) + geom_point()
ggplot(data = plot.sig.mendota.key, aes(x = MaxTime, y = Cluster, color = Phylum, size = MaxValue)) + geom_point()
ggplot(data = plot.sig.mendota.key[which(plot.sig.mendota.key$Cluster = 2)], aes(x = MaxTime, y = MaxValue, group = Phylum)) + geom_bar()
ggplot(data = plot.sig.mendota.key[which(plot.sig.mendota.key$Cluster == 2),], aes(x = MaxTime, y = MaxValue, group = Phylum)) + geom_bar()
ggplot(data = plot.sig.mendota.key[which(plot.sig.mendota.key$Cluster == 2),], aes(x = MaxTime, y = MaxValue, group = Phylum)) + geom_bar(stat = "identity")
ggplot(data = plot.sig.mendota.key[which(plot.sig.mendota.key$Cluster == 2),], aes(x = MaxTime, y = MaxValue, fill = Phylum)) + geom_bar(stat = "identity")
paste("ME", clusters, sep = "")
# Panel A: plot eigenvectors as heatmaps
modules <- paste("ME", clusters, sep = "")
head(long_eigenvectors)
plot.long_eigenvectors <- long_eigenvectors[which(long_eigenvectors$variable %in% modules), ]
ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile()
ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time", title = "Mendota") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0)
str(plot.long_eigenvectors)
ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time", title = "Lake Mendota") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM"))
ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time", title = "Lake Mendota") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
head(plot.sig.mendota.key)
# Panel B: Phylum barcharts
plot.sig.mendota.key$Cluster <- paste("ME", plot.sig.mendota.key$Cluster, sep = "")
ggplot(data = plot.sig.mendota.key, aes(x = Totals, y = Cluster, fill = Phylum)) + geom_bar(stat = "identity")
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity")
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.mendota.key$Phylum)
phylum_totals
keep.phyla <- names(phylum_totals)[which(phylum_totals > 75)]
keep.phyla
plot.sig.mendota.key <- plot.sig.mendota.key[which(plot.sig.mendota.key$Phylum %in% keep.phyla), ]
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10() + coord_flip()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity")
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip()
# Which clusters to plot?
clusters <- c(2, 3, 6, 7, 8, 13, 21, 25, 26, 30, 36, 37, 39, 47, 53, 55)
plot.sig.mendota.key <- sig.mendota.key[which(sig.mendota.key$Cluster %in% clusters),]
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.mendota.key$Phylum)
plot.sig.mendota.key$Cluster <- paste("ME", plot.sig.mendota.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 75)]
plot.sig.mendota.key <- plot.sig.mendota.key[which(plot.sig.mendota.key$Phylum %in% keep.phyla), ]
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_y_log10()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_x_log10()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10() coord_flip()
ggplot(data = plot.sig.mendota.key, aes(y = Totals, x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + scale_y_log10() + coord_flip()
ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip()
ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time", title = "Lake Mendota") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
plot.sig.mendota.key$Cluster <- factor(plot.sig.mendota.key$Cluster, levels = c("ME53", "ME36", "ME21", "ME3", "ME39", "ME6", "ME37", "ME7", "ME26", "ME8", "ME2", "ME55", "ME30", "ME47", "ME25", "ME13"))
ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
plot.sig.mendota.key$Cluster <- factor(plot.sig.mendota.key$Cluster, levels = rev(c("ME53", "ME36", "ME21", "ME3", "ME39", "ME6", "ME37", "ME7", "ME26", "ME8", "ME2", "ME55", "ME30", "ME47", "ME25", "ME13")))
ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
ME1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time", title = "Lake Mendota") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
ME2 <- ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
plot_grid(ME1, ME2, labels = c("A", "B"))
ME1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
plot_grid(ME1, ME2, labels = c("A", "B"))
ME2 <- ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
ME2 <- ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
plot_grid(ME1, ME2, labels = c("A", "B"))
ME1
# Get genes and taxonomy from each cluster
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 3),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 6),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Get genes and taxonomy from each cluster
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 7),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Get genes and taxonomy from each cluster
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 8),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Get genes and taxonomy from each cluster
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 2),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Get genes and taxonomy from each cluster
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 13),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
ME2
library(ggplot2)
library(cowplot)
library(reshape2)
sig.mendota.key <- read.csv("D:/geodes_data_tables/WGCNA_mendota_results.csv", header = T)
eigenvectors <- read.csv("D:/geodes_data_tables/WGCNA_mendota_eigenvectors.csv", header = T, row.names = 1)
sig.mendota.key$Taxonomy <- gsub("Bacteria;", "", sig.mendota.key$Taxonomy)
sig.mendota.key$Taxonomy <- gsub("Eukaryota;", "", sig.mendota.key$Taxonomy)
sig.mendota.key$Phylum <- sapply(strsplit(as.character(sig.mendota.key$Taxonomy),";"), `[`, 1)
sig.mendota.key$Phylum <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION MH", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION LP", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("None", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified Oligohymenophorea", "Ciliophora", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified Pelagophyceae", "Ochrophyta", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("unclassified", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("Unclassified ", "Unclassified", sig.mendota.key$Phylum)
sig.mendota.key$Phylum <- gsub("UnclassifiedIsochrysidales", "Haptophyta", sig.mendota.key$Phylum)
# Which clusters to plot? Visualize and choose
eigenvectors$Timepoint <- rownames(eigenvectors)
long_eigenvectors <- melt(eigenvectors)
plot.colors <- NA
plot.colors[which(long_eigenvectors$value > 0)] <- "green"
plot.colors[which(long_eigenvectors$value < 0)] <- "red"
long_eigenvectors$Sign <- plot.colors
long_eigenvectors$Timepoint <- factor(long_eigenvectors$Timepoint, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
for(i in 0:57){
cluster = paste("ME", i, sep = "")
p <- ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
print(p)
}
clusters <- c(2, 3, 6, 7, 8, 13, 21, 25, 26, 30, 36, 37, 39, 47, 53, 55)
plot.sig.mendota.key <- sig.mendota.key[which(sig.mendota.key$Cluster %in% clusters),]
# Panel A
modules <- paste("ME", clusters, sep = "")
plot.long_eigenvectors <- long_eigenvectors[which(long_eigenvectors$variable %in% modules), ]
ME1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.mendota.key$Phylum)
plot.sig.mendota.key$Cluster <- paste("ME", plot.sig.mendota.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 75)]
plot.sig.mendota.key <- plot.sig.mendota.key[which(plot.sig.mendota.key$Phylum %in% keep.phyla), ]
plot.sig.mendota.key$Cluster <- factor(plot.sig.mendota.key$Cluster, levels = rev(c("ME53", "ME36", "ME21", "ME3", "ME39", "ME6", "ME37", "ME7", "ME26", "ME8", "ME2", "ME55", "ME30", "ME47", "ME25", "ME13")))
ME2 <- ggplot(data = plot.sig.mendota.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
plot_grid(ME1, ME2, labels = c("A", "B"))
x <- sig.mendota.key[which(sig.mendota.key$Cluster == 13),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Plot phyla, not including unclassified
phyla_breakdown <- aggregate(Totals ~ Phylum, x, sum)
ggplot(phyla_breakdown[grep("Unclassified", phyla_breakdown$Phylum, invert = T), ], aes(x = Phylum, y = Totals)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads()
enableWGCNAThreads()
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
# Gene keys
#mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey.csv", header = T)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
#abun_mnorm <- mnorm[which(rowSums(mnorm) > (dim(mnorm)[2] * 1000)), ]
abun_snorm <- snorm[which(rowSums(snorm) > (dim(snorm)[2] * 1000)), ]
abun_snorm$Genes <- rownames(abun_snorm)
abun_snorm <- melt(abun_snorm)
abun_snorm$Timepoint <- metadata$Timepoint[match(abun_snorm$variable, metadata$Sample)]
agg_abun_snorm <- aggregate(value ~ Genes + Timepoint, data = abun_snorm, mean)
new_abun_snorm <- reshape(agg_abun_snorm, idvar = "Genes", timevar = "Timepoint", direction = "wide")
rownames(new_abun_snorm) <- new_abun_snorm[, 1]
new_abun_snorm <- new_abun_snorm[, 2:dim(new_abun_snorm)[2]]
fdr.spark <- fdrtool(fisher.g.test(t(new_abun_snorm)), statistic = "pvalue")
sig.spark <- t(new_abun_snorm[which(fdr.spark$pval < 0.05),])
spark_net <- blockwiseModules(sig.spark, maxBlockSize = 1000, power = 7, loadTOM = F, saveTOMs = F, networkType = "signed", minModuleSize = 30, numericLabels = T, nThreads = 8, verbose = 3)
write.csv(sig.spark.key, "D:/geodes_data_tables/WGCNA_sparkling_results.csv", row.names = F)
write.csv(spark_net$MEs, "D:/geodes_data_tables/WGCNA_sparkling_eigenvectors.csv", row.names = T)
head(rownames(sig.spark))
head(colnames(sig.spark))
sig.spark.key <- spark_key[match(colnames(sig.spark), spark_key$Gene), ]
head(sig.spark.key)
str(spark_net)
dim(sig.spark)
sig.spark.key$Cluster <- spark_net$colors
sig.spark.key$Totals <- rowSums(new_abun_snorm)[match(rownames(new_abun_snorm), sig.spark.key$Gene)]
sig.spark.key$Totals <- rowSums(new_abun_snorm)[match(sig.spark.key$Gene, rownames(new_abun_snorm))]
head(sig.spark.key)
write.csv(sig.spark.key, "D:/geodes_data_tables/WGCNA_sparkling_results.csv", row.names = F)
#### Sparkling
# Read data
sig.spark.key <- read.csv("D:/geodes_data_tables/WGCNA_sparkling_results.csv", header = T)
eigenvectors <- read.csv("D:/geodes_data_tables/WGCNA_sparkling_eigenvectors.csv", header = T, row.names = 1)
sig.spark.key$Taxonomy <- gsub("Bacteria;", "", sig.spark.key$Taxonomy)
sig.spark.key$Taxonomy <- gsub("Eukaryota;", "", sig.spark.key$Taxonomy)
sig.spark.key$Phylum <- sapply(strsplit(as.character(sig.spark.key$Taxonomy),";"), `[`, 1)
sig.spark.key$Phylum <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("NO CLASSIFICATION MH", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("NO CLASSIFICATION LP", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("None", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified unclassified", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified Oligohymenophorea", "Ciliophora", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified Pelagophyceae", "Ochrophyta", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("unclassified", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("Unclassified ", "Unclassified", sig.spark.key$Phylum)
sig.spark.key$Phylum <- gsub("UnclassifiedIsochrysidales", "Haptophyta", sig.spark.key$Phylum)
eigenvectors$Timepoint <- rownames(eigenvectors)
long_eigenvectors <- melt(eigenvectors)
plot.colors <- NA
plot.colors[which(long_eigenvectors$value > 0)] <- "green"
plot.colors[which(long_eigenvectors$value < 0)] <- "red"
long_eigenvectors$Sign <- plot.colors
long_eigenvectors$Timepoint <- factor(long_eigenvectors$Timepoint, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
max(long_eigenvectors$variable)
head(long_eigenvectors)
for(i in 0:46){
cluster = paste("ME", i, sep = "")
p <- ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
print(p)
}
clusters <- c(4, 6, 10, 13, 14, 15, 19, 27, 31)
plot.sig.spark.key <- sig.spark.key[which(sig.spark.key$Cluster %in% clusters),]
# Panel A
modules <- paste("ME", clusters, sep = "")
plot.long_eigenvectors <- long_eigenvectors[which(long_eigenvectors$variable %in% modules), ]
ME1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
SP1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM", "9AM", "1PM", "5PM", "9PM", "1AM")) + theme(legend.position = "none")
SP1
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.spark.key$Phylum)
plot.sig.spark.key$Cluster <- paste("ME", plot.sig.spark.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 75)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME53", "ME36", "ME21", "ME3", "ME39", "ME6", "ME37", "ME7", "ME26", "ME8", "ME2", "ME55", "ME30", "ME47", "ME25", "ME13")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
SP2
plot.sig.spark.key <- sig.spark.key[which(sig.spark.key$Cluster %in% clusters),]
phylum_totals <- table(plot.sig.spark.key$Phylum)
plot.sig.spark.key$Cluster <- paste("ME", plot.sig.spark.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 75)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#fb9a99", "#b2df8a", "#1f78b4", "grey", "#a6cee3"))
SP2
plot_grid(ME1, ME2, labels = c("A", "B"))
plot_grid(SP1, SP2, labels = c("A", "B"))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
phylum_totals
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
plot.sig.spark.key <- sig.spark.key[which(sig.spark.key$Cluster %in% clusters),]
phylum_totals <- table(plot.sig.spark.key$Phylum)
plot.sig.spark.key$Cluster <- paste("ME", plot.sig.spark.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.spark.key <- plot.sig.spark.key[which(plot.sig.spark.key$Phylum %in% keep.phyla), ]
plot.sig.spark.key$Cluster <- factor(plot.sig.spark.key$Cluster, levels = rev(c("ME19", "ME13", "ME10", "ME15", "ME4", "ME31", "ME6", "ME27", "ME14")))
SP2 <- ggplot(data = plot.sig.spark.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#1f78b4", "grey"))
plot_grid(SP1, SP2, labels = c("A", "B"))
x <- sig.spark.key[which(sig.spark.key$Cluster == 19),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
# Plot phyla, not including unclassified
phyla_breakdown <- aggregate(Totals ~ Phylum, x, sum)
x <- sig.spark.key[which(sig.spark.key$Cluster == 13),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 10),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 15),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 4),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 6),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.spark.key[which(sig.spark.key$Cluster == 14),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
grep("carboxylase", x)
x$Product
library(ggplot2)
library(cowplot)
library(reshape2)
library(WGCNA)
allowWGCNAThreads()
enableWGCNAThreads()
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
#snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
# Gene keys
#mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey.csv", header = T)
#spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
#abun_mnorm <- mnorm[which(rowSums(mnorm) > (dim(mnorm)[2] * 1000)), ]
#abun_snorm <- snorm[which(rowSums(snorm) > (dim(snorm)[2] * 1000)), ]
abun_tnorm <- tnorm[which(rowSums(tnorm) > (dim(tnorm)[2] * 1000)), ]
abun_tnorm$Genes <- rownames(abun_tnorm)
abun_tnorm <- melt(abun_tnorm)
abun_tnorm$Timepoint <- metadata$Timepoint[match(abun_tnorm$variable, metadata$Sample)]
agg_abun_tnorm <- aggregate(value ~ Genes + Timepoint, data = abun_tnorm, mean)
new_abun_tnorm <- reshape(agg_abun_tnorm, idvar = "Genes", timevar = "Timepoint", direction = "wide")
rownames(new_abun_tnorm) <- new_abun_tnorm[, 1]
new_abun_tnorm <- new_abun_tnorm[, 2:dim(new_abun_tnorm)[2]]
new_abun_tnorm <- new_abun_tnorm[, 1:7]
# fdr.spark <- fdrtool(fisher.g.test(t(new_abun_snorm)), statistic = "pvalue")
# sig.spark <- t(new_abun_snorm[which(fdr.spark$pval < 0.05),])
#
fdr.trout <- fdrtool(fisher.g.test(t(new_abun_tnorm)), statistic = "pvalue")
sig.trout <- t(new_abun_tnorm[which(fdr.trout$pval < 0.05),])
trout_net <- blockwiseModules(sig.trout, maxBlockSize = 1000, power = 18, loadTOM = F, saveTOMs = F, networkType = "signed", minModuleSize = 30, numericLabels = T, nThreads = 8, verbose = 3)
sig.trout.key <- trout_key[match(colnames(sig.trout), trout_key$Gene), ]
sig.trout.key$Cluster <- trout_net$colors
sig.trout.key$Totals <- rowSums(new_abun_tnorm)[match(sig.trout.key$Gene, rownames(new_abun_tnorm))]
write.csv(sig.trout.key, "D:/geodes_data_tables/WGCNA_trout_results.csv", row.names = F)
write.csv(trout_net$MEs, "D:/geodes_data_tables/WGCNA_trout_eigenvectors.csv", row.names = T)
#### Trout
# Read data
sig.trout.key <- read.csv("D:/geodes_data_tables/WGCNA_trout_results.csv", header = T)
eigenvectors <- read.csv("D:/geodes_data_tables/WGCNA_trout_eigenvectors.csv", header = T, row.names = 1)
# Fix taxonomy
sig.trout.key$Taxonomy <- gsub("Bacteria;", "", sig.trout.key$Taxonomy)
sig.trout.key$Taxonomy <- gsub("Eukaryota;", "", sig.trout.key$Taxonomy)
sig.trout.key$Phylum <- sapply(strsplit(as.character(sig.trout.key$Taxonomy),";"), `[`, 1)
sig.trout.key$Phylum <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION MH", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("NO CLASSIFICATION LP", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("None", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified Oligohymenophorea", "Ciliophora", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified Pelagophyceae", "Ochrophyta", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("unclassified", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("Unclassified ", "Unclassified", sig.trout.key$Phylum)
sig.trout.key$Phylum <- gsub("UnclassifiedIsochrysidales", "Haptophyta", sig.trout.key$Phylum)
eigenvectors$Timepoint <- rownames(eigenvectors)
long_eigenvectors <- melt(eigenvectors)
plot.colors <- NA
plot.colors[which(long_eigenvectors$value > 0)] <- "green"
plot.colors[which(long_eigenvectors$value < 0)] <- "red"
long_eigenvectors$Sign <- plot.colors
long_eigenvectors$Timepoint <- factor(long_eigenvectors$Timepoint, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
for(i in 0:24){
cluster = paste("ME", i, sep = "")
p <- ggplot(data = long_eigenvectors[which(long_eigenvectors$variable == cluster), ], aes(x = Timepoint, y = value, fill = Sign)) + geom_bar(stat = "identity") + labs(title = cluster) + scale_fill_manual(values = c("green", "red")) + theme(legend.position = "none")
print(p)
}
clusters <- c(1, 3, 4, 11, 16, 18)
plot.sig.trout.key <- sig.trout.key[which(sig.trout.key$Cluster %in% clusters),]
# Panel A
modules <- paste("ME", clusters, sep = "")
plot.long_eigenvectors <- long_eigenvectors[which(long_eigenvectors$variable %in% modules), ]
SP1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM")) + theme(legend.position = "none")
TB1 <- ggplot(data = plot.long_eigenvectors, aes(x = Timepoint, y = variable, fill = value)) + geom_tile() + labs(y = "Cluster", x = "Time") + scale_fill_gradient2(low = "red", mid = "white", high = "green", midpoint = 0) + scale_x_discrete(breaks=c("1", "2", "3", "4", "5", "6", "7"), labels=c("5AM", "9AM", "1PM", "5PM", "9PM", "1AM", "5AM")) + theme(legend.position = "none")
# Panel B: Phylum barcharts
phylum_totals <- table(plot.sig.trout.key$Phylum)
plot.sig.trout.key$Cluster <- paste("ME", plot.sig.trout.key$Cluster, sep = "")
keep.phyla <- names(phylum_totals)[which(phylum_totals > 50)]
plot.sig.trout.key <- plot.sig.trout.key[which(plot.sig.trout.key$Phylum %in% keep.phyla), ]
TB1
phylum_totals
TB2 <- ggplot(data = plot.sig.trout.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#33a02c", "#1f78b4", "grey"))
plot_grid(TB1, TB2, labels = c("A", "B"))
TB2 <- ggplot(data = plot.sig.trout.key, aes(y = log(Totals), x = Cluster, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = NULL, y = "Log of Total Reads") + coord_flip() + scale_fill_manual(values = c("#fdbf6f", "#e31a1c", "#1f78b4", "grey", "#a6cee3"))
plot_grid(TB1, TB2, labels = c("A", "B"))
x <- sig.trout.key[which(sig.trout.key$Cluster == 1),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 4),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 3),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 11),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 18),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
x <- sig.trout.key[which(sig.trout.key$Cluster == 16),]
x <- x[order(x$Totals),]
x[(dim(x)[1] - 50): dim(x)[1],]
