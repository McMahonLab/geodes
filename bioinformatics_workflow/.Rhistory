ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Motility" & all_lakes$Lake == "Trout Bog"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
time_comparison <- aggregate(value ~ variable + Category, all_lakes[which(all_lakes$Lake == "Trout Bog"),], sum)
time_comparison <- reshape(time_comparison, idvar = "Category", timevar = "variable", direction = "wide")
time_comparison <- time_comparison[which(is.na(time_comparison[,2]) == F), ]
rownames(time_comparison) <- time_comparison[,1]
time_comparison <- time_comparison[,2:dim(time_comparison)[2]]
colnames(time_comparison) <- gsub("value.", "", colnames(time_comparison))
input <- as.matrix(time_comparison)
input <- input/500
input <- round(input, digits = 0)
input[which(is.na(input) == T)] <- 0
conditions <- metadata$Condition[match(colnames(time_comparison), metadata$Sample)]
coldata <- data.frame(samples = colnames(time_comparison), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% rownames(sig.res)),]
plot.time <- plot.time[which(plot.time$Lake == "Trout Bog"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time[which(plot.time$Category != "Photosystem I" & plot.time$Category != "Photosystem II" & plot.time$Category != "RuBisCO" & plot.time$Category != "Sulfate adenylyltransferase"),], aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Trout Bog") + coord_flip()
metadata$Condition <- "NA"
metadata$Condition[which(metadata$Time == 9 | metadata$Time == 13 | metadata$Time == 17)] <- "day"
metadata$Condition[which(metadata$Time == 5 | metadata$Time == 21 | metadata$Time == 1)] <- "night"
time_comparison <- aggregate(value ~ variable + Category, all_lakes[which(all_lakes$Lake == "Trout Bog"),], sum)
time_comparison <- reshape(time_comparison, idvar = "Category", timevar = "variable", direction = "wide")
time_comparison <- time_comparison[which(is.na(time_comparison[,2]) == F), ]
rownames(time_comparison) <- time_comparison[,1]
time_comparison <- time_comparison[,2:dim(time_comparison)[2]]
colnames(time_comparison) <- gsub("value.", "", colnames(time_comparison))
input <- as.matrix(time_comparison)
input <- input/500
input <- round(input, digits = 0)
input[which(is.na(input) == T)] <- 0
conditions <- metadata$Condition[match(colnames(time_comparison), metadata$Sample)]
coldata <- data.frame(samples = colnames(time_comparison), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% rownames(sig.res)),]
plot.time <- plot.time[which(plot.time$Lake == "Trout Bog"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time[which(plot.time$Category != "Photosystem I" & plot.time$Category != "Photosystem II" & plot.time$Category != "RuBisCO" & plot.time$Category != "Sulfate adenylyltransferase"),], aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Trout Bog") + coord_flip()
ggplot(data = plot.time[which(plot.time$Category != "Photosystem I" & plot.time$Category != "Photosystem II" & plot.time$Category != "Sulfate adenylyltransferase"),], aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Trout Bog") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Nitrogenase" & all_lakes$Lake == "Sparkling Lake"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Nitrite reductase" & all_lakes$Lake == "Sparkling Lake"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Chitinase" & all_lakes$Lake == "Sparkling Lake"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Chitobiose transport" & all_lakes$Lake == "Sparkling Lake"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
x <- aggregate(value ~ Taxonomy + Condition, all_lakes[which(all_lakes$Category == "Rhodopsin" & all_lakes$Lake == "Sparkling Lake"), ], mean)
ggplot(data = x, aes(x = Taxonomy, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
read_counts[1:10, 1:10]
genekey <- read.table("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1, sep = "\t")
head(genekey)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
head(genekey)
head(metadata)
tf <- (rownames(readcounts) == rownames(genekey))
tf <- (rownames(read_counts) == rownames(genekey))
length(which(tf == FALSE))
genomekey <- genekey[which(genekey$X1 == genome), ]
str(genekey)
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
head(as.character(genekey$X1))
genome
genome <- "2602042079"
lake <- "Mendota"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
head(genomekey)
read_counts[1:10, 1:10]
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
lakekey
match(rownames(genome_key), rownames(read_counts))
match(rownames(genomekey), rownames(read_counts))
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == "Mendota")])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
head(genomekey)
genomekey[1:25,]
genomekey[26:50,]
genomekey[51:100,]
genomekey[101:150,]
genomekey[grep("transport", genomekey$X3), ]
dim(genomekey[grep("transport", genomekey$X3), ])
barplot(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)]))
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])))
zscore <- function(counts){
z <- (counts - mean(counts)) / sd(counts)
return(z)
}
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])))
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2524023178"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
read_counts <- read_counts[which(colnames(read_counts != "GEODES014.nonrRNA" & read_counts != "GEODES033.nonrRNA" & read_counts != "GEODES065.nonrRNA" & read_counts != "GEODES0158.nonrRNA"))]
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
genome <- "2602042079"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
read_counts <- read_counts[which(colnames(read_counts != "GEODES014.nonrRNA" & read_counts != "GEODES033.nonrRNA" & read_counts != "GEODES065.nonrRNA" & read_counts != "GEODES0158.nonrRNA"))]
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
read_counts[1:3, 1:5]
read_counts <- read_counts[which(colnames(read_counts) != "GEODES014.nonrRNA" & read_counts != "GEODES033.nonrRNA" & read_counts != "GEODES065.nonrRNA" & read_counts != "GEODES0158.nonrRNA"), ]
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
read_counts <- read_counts[which(colnames(read_counts) != "GEODES014.nonrRNA" & read_counts != "GEODES033.nonrRNA" & read_counts != "GEODES065.nonrRNA" & read_counts != "GEODES0158.nonrRNA"), ]
read_counts <- read_counts[which(colnames(read_counts) != "GEODES014.nonrRNA", ]
& read_counts != "GEODES033.nonrRNA" & read_counts != "GEODES065.nonrRNA" & read_counts != "GEODES0158.nonrRNA"), ]
read_counts <- read_counts[which(colnames(read_counts) != "GEODES014.nonrRNA"), ]
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
read_counts <- read_counts[, which(colnames(read_counts) != "GEODES014.nonrRNA", & colnames(read_counts) != "GEODES033.nonrRNA" & colnames(read_counts) != "GEODES065.nonrRNA" & colnames(read_counts) != "GEODES0158.nonrRNA")]
read_counts <- read_counts[, which(colnames(read_counts) != "GEODES014.nonrRNA" & colnames(read_counts) != "GEODES033.nonrRNA" & colnames(read_counts) != "GEODES065.nonrRNA" & colnames(read_counts) != "GEODES0158.nonrRNA")]
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
genome <- "2602042079"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
zscore <- function(counts){
z <- (counts - mean(counts)) / sd(counts)
return(z)
}
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
colnames(read_counts)
which(colnames(read_counts) != "GEODES0158.nonrRNA")
colnames(read_counts)[which(colnames(read_counts) != "GEODES0158.nonrRNA")]
read_counts <- read_counts[, which(colnames(read_counts) != "GEODES014" & colnames(read_counts) != "GEODES033" & colnames(read_counts) != "GEODES065" & colnames(read_counts) != "GEODES0158")]
which(colnames(read_counts) != "GEODES014" & colnames(read_counts) != "GEODES033" & colnames(read_counts) != "GEODES065" & colnames(read_counts) != "GEODES0158")
read_counts <- read_counts[, which(colnames(read_counts) != "GEODES014" | colnames(read_counts) != "GEODES033" | colnames(read_counts) != "GEODES065" | colnames(read_counts) != "GEODES0158")]
which(colnames(read_counts) == "GEODEs158")
which(colnames(read_counts) == "GEODES158")
which(colnames(read_counts) != "GEODES014" & colnames(read_counts) != "GEODES033" & colnames(read_counts)  "GEODES065" & colnames(read_counts) != "GEODES0158")
which(colnames(read_counts) != "GEODES014" & colnames(read_counts) != "GEODES033" & colnames(read_counts) != "GEODES065" & colnames(read_counts) != "GEODES0158")
read_counts$GEODES014 <- NULL
colnames(read_counts)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
genome <- "2602042079"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2524023178"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genomekey[1:100,]
genome <- "2236661002"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236347069"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236347069"
lake <- "Mendota"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661009"
lake <- "Trout Bog"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
head(genomekey)
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
head(genomekey)
lake <- "Trout"
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
head(genomekey)
head(metadata)
metadata
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
lakeey
lakekey
which(lakekey == lake)
match(rownames(genomekey), rownames(read_counts))
read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)]
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
genome <- "2236661009"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
read_counts[1:10, 1:10]
x <- read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)]
x[1:10, 1:10]
head(rowSums(x))
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
head(genomekey)
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2593339186"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
barplot(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
)
head(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)]))
genomekey[grep("opsin", genomekey$X3), ]
genome <- "2524023178"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
genome <- "2524023178"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
genome <- "2519103005"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661009"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "22642465190"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2264265190"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661001"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661005"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661001"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genome_key[grep("opsin", genomekey$X3)]
genomekey[grep("opsin", genomekey$X3), ]
genome <- "2236661005"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("opsin", genomekey$X3), ]
genome <- "2602042079"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2545555832"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2524023174"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2606217190"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236661000"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2236347069"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
genome <- "2545555807"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
barplot(zscore(colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])), las = 2)
lake <- "Sparkling"
genome <- "2264265190"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group1 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
group1
lake <- "Sparkling"
genome <- "2236661001"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group2 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genome <- "2236061005"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group3 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
cor(group1, group2)
cor(group1, group3)
cor(group2, group3)
group1
group2
group3
genome <- "2236661005"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group3 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
cor(group1, group3)
cor(group2, group3)
barplot(group1)
barplot(group2)
barplot(group3)
lake <- "Sparkling"
genome <- "2236661000"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group1 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
lake <- "Sparkling"
genome <- "2236347069"
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
group2 <- colSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
cor(group1, group2)
