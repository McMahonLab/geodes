sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% rownames(sig.res)),]
plot.time <- plot.time[which(plot.time$Lake == "Sparling Lake"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time, aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Sparkling Lake") + coord_flip()
plot.time <- all_lakes[which(all_lakes$Category %in% rownames(sig.res)),]
plot.time <- plot.time[which(plot.time$Lake == "Sparkling Lake"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time, aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Sparkling Lake") + coord_flip()
res
res[which(rownames(res) == "RuBisCO")]
res[which(rownames(res) == "RuBisCO"), ]
all_lakes <- rbind(abun_mnorm, abun_tnorm, abun_snorm)
all_lakes$Category <- "unknown"
all_lakes$Category[grep("ribulose-bisphosphate|Rubisco", all_lakes$Product)] <- "Carbon fixation"
all_lakes$Category[grep("sugar transport|carbohydrate ABC transporter|monosaccharide ABC transporter|mannose ABC transporter ATP-binding protein/fructose ABC transporter ATP-binding protein/ribose|Ribose/xylose/arabinose/galactoside ABC-type transport|Sugar (and other) transport|galactose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("rhodopsin|opsin", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("rhamnose transport|L-rhamnose-H+ transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("spermidine|putrescine|Spermidine|Putrescine", all_lakes$Product)] <- "Polyamine metabolism"
all_lakes$Category[grep("ribose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("raffinose/stachyose/melibiose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("glucose/mannose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("xylose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("glucosaminidase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("glucoside", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("Biopolymer transport|biopolymer transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("maltooligosaccharide transport|moltooligosaccharide transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("carotenoid", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("fructose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("C4-dicarboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes$Category[grep("chitobiose transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("nitrogenase|nitrogen fixation", all_lakes$Product)] <- "Nitrogen fixation"
all_lakes$Category[grep("chitinase|Chitinase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("motility|gliding", all_lakes$Product)] <- "Motility"
all_lakes$Category[grep("nitrite reductase", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("nitrate reductase", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("tricarboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes$Category[grep("lactose/L-arabinose transport|arabinose ABC transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("methylamine dehydrogenase|trimethylamine monooxygenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("nitrate/nitrite transport|Nitrate/nitrite transport|nitrite transport", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("methanol dehydrogenase|PQQ-dependent dehydrogenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("methane/ammonia monooxygenase|methane monooxygenase|ammonia monoxygenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("hexosaminidase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("glycosyl hydrolase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("citryl-CoA lyase", all_lakes$Product)] <- "Carbon fixation"
all_lakes$Category[grep("cellobiose transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("sulfur-oxidizing", all_lakes$Product)] <- "Sulfur oxidation"
all_lakes$Category[grep("photosystem II|Photosystem II", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("photosystem I |Photosystem I ", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("photosynthetic reaction centre|photosynthetic reaction center|Photosynthetic reaction center", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("chlorophyllide a reductase|chlorophyllide reductase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("light-independent protochlorophyllide|ferredoxin protochlorophyllide|protochlorophyllide oxidoreductase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("chlorophyll synthase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("alkaline phosphatase|Alkaline phosphatase", all_lakes$Product)] <- "Alkaline phosphatase"
all_lakes$Category[grep("cytochrome c|ATP synthase|Cytochrome c", all_lakes$Product)] <- "Oxidative phosphorylation"
all_lakes$Category[grep("carboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes <- all_lakes[which(all_lakes$Category != "unknown"), ]
all_lakes$Condition <- "NA"
all_lakes$Condition[which(all_lakes$Timepoint == 9 | all_lakes$Timepoint == 13 | all_lakes$Timepoint == 17)] <- "day"
all_lakes$Condition[which(all_lakes$Timepoint == 5 | all_lakes$Timepoint == 21 | all_lakes$Timepoint == 1)] <- "night"
metadata$Condition <- "NA"
metadata$Condition[which(metadata$Time == 9 | metadata$Time == 13 | metadata$Time == 17)] <- "day"
metadata$Condition[which(metadata$Time == 5 | metadata$Time == 21 | metadata$Time == 1)] <- "night"
time_comparison <- aggregate(value ~ variable + Category, all_lakes[which(all_lakes$Lake == "Sparkling Lake"),], sum)
time_comparison <- reshape(time_comparison, idvar = "Category", timevar = "variable", direction = "wide")
time_comparison <- time_comparison[which(is.na(time_comparison[,2]) == F), ]
rownames(time_comparison) <- time_comparison[,1]
time_comparison <- time_comparison[,2:dim(time_comparison)[2]]
colnames(time_comparison) <- gsub("value.", "", colnames(time_comparison))
input <- as.matrix(time_comparison)
input <- input/500
input <- round(input, digits = 0)
input[which(is.na(input) == T)] <- 0
conditions <- metadata$Condition[match(colnames(time_comparison), metadata$Sample)]
coldata <- data.frame(samples = colnames(time_comparison), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% c(rownames(sig.res))),]
plot.time <- plot.time[which(plot.time$Lake == "Sparkling Lake"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time, aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Sparkling Lake") + coord_flip()
all_lakes <- rbind(abun_mnorm, abun_tnorm, abun_snorm)
all_lakes$Category <- "unknown"
all_lakes$Category[grep("ribulose-bisphosphate|Rubisco", all_lakes$Product)] <- "RuBisCO"
all_lakes$Category[grep("sugar transport|carbohydrate ABC transporter|monosaccharide ABC transporter|mannose ABC transporter ATP-binding protein/fructose ABC transporter ATP-binding protein/ribose|Ribose/xylose/arabinose/galactoside ABC-type transport|Sugar (and other) transport|galactose transport", all_lakes$Product)] <- "General sugar transport"
all_lakes$Category[grep("rhodopsin|opsin", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("Fe transport|iron(III) transport|Fe3+ transport|iron transport|iron complex transport", all_lakes$Product)] <- "Iron transport"
all_lakes$Category[grep("rhamnose transport|L-rhamnose-H+ transport", all_lakes$Product)] <- "Rhamnose transport"
all_lakes$Category[grep("phosphate ABC transporter|phosphate transport|phosphate/phosphonate transport|Phosphate transport", all_lakes$Product)] <- "Phosphate transport"
all_lakes$Category[grep("spermidine|putrescine|Spermidine|Putrescine", all_lakes$Product)] <- "Polyamine metabolism"
all_lakes$Category[grep("ribose transport", all_lakes$Product)] <- "Ribose transport"
all_lakes$Category[grep("amino acid transport|Amino acid transport|amino acid/peptide transport|amino acid ABC transport|amino acid/amide transport|glutamate/aspartate transport", all_lakes$Product)] <- "Amino acid transport"
all_lakes$Category[grep("peptide transport|peptide ABC transport|protein transport", all_lakes$Product)] <- "Peptide transport"
all_lakes$Category[grep("glycerol transport", all_lakes$Product)] <- "Glycerol transport"
all_lakes$Category[grep("serine protease", all_lakes$Product)] <- "Serine protease"
all_lakes$Category[grep("raffinose/stachyose/melibiose transport", all_lakes$Product)] <- "Raff-Stach-Meli transport"
all_lakes$Category[grep("glucose/mannose transport", all_lakes$Product)] <- "Glucose-Mannose transport"
all_lakes$Category[grep("xylose transport", all_lakes$Product)] <- "Xylose transport"
all_lakes$Category[grep("glycerol-3-phosphate transport", all_lakes$Product)] <- "G3P transport"
all_lakes$Category[grep("glucosaminidase", all_lakes$Product)] <- "Glucosaminidase"
all_lakes$Category[grep("glucoside", all_lakes$Product)] <- "Glucoside"
all_lakes$Category[grep("Biopolymer transport|biopolymer transport", all_lakes$Product)] <- "Biopolymer transport"
all_lakes$Category[grep("maltooligosaccharide transport|moltooligosaccharide transport", all_lakes$Product)] <- "Maltooligosaccharide transport"
all_lakes$Category[grep("carotenoid", all_lakes$Product)] <- "Carotenoid"
all_lakes$Category[grep("ammonium transport", all_lakes$Product)] <- "Ammonium transport"
all_lakes$Category[grep("Phage|phage", all_lakes$Product)] <- "Phage-related"
all_lakes$Category[grep("sulfonate transport", all_lakes$Product)] <- "Sulfonate transport"
all_lakes$Category[grep("phosphoribulokinase|Phosphoribulokinase", all_lakes$Product)] <- "Phosphoribulokinase"
all_lakes$Category[grep("fructose transport", all_lakes$Product)] <- "Fructose transport"
all_lakes$Category[grep("C4-dicarboxylate transport", all_lakes$Product)] <- "C4-dicarboxylate transport"
all_lakes$Category[grep("sulfate transport|sulfate-transport", all_lakes$Product)] <- "Sulfate transport"
all_lakes$Category[grep("glycine betaine transport|glycine betaine/proline transport|sorbitol/mannitol transport|osmoprotectant transport", all_lakes$Product)] <- "Osmolyte transport"
all_lakes$Category[grep("chitobiose transport", all_lakes$Product)] <- "Chitobiose transport"
all_lakes$Category[grep("nitrogenase|nitrogen fixation", all_lakes$Product)] <- "Nitrogenase"
all_lakes$Category[grep("chitinase|Chitinase", all_lakes$Product)] <- "Chitinase"
all_lakes$Category[grep("urea transport", all_lakes$Product)] <- "Urea transport"
all_lakes$Category[grep("urease", all_lakes$Product)] <- "Urease"
all_lakes$Category[grep("motility|gliding", all_lakes$Product)] <- "Motility"
all_lakes$Category[grep("nitrite reductase", all_lakes$Product)] <- "Nitrite reductase"
all_lakes$Category[grep("nitrate reductase", all_lakes$Product)] <- "Nitrate reductase"
all_lakes$Category[grep("tricarboxylate transport", all_lakes$Product)] <- "Tricarboxylate transport"
all_lakes$Category[grep("lactose/L-arabinose transport|arabinose ABC transport", all_lakes$Product)] <- "Lactose-arabinose transport"
all_lakes$Category[grep("methylamine dehydrogenase|trimethylamine monooxygenase", all_lakes$Product)] <- "Methylamine metabolism"
all_lakes$Category[grep("nucleoside transport", all_lakes$Product)] <- "Nucleoside transport"
all_lakes$Category[grep("sulfite reductase|Sulfite reductase", all_lakes$Product)] <- "Sulfite reductase"
all_lakes$Category[grep("nitrate/nitrite transport|Nitrate/nitrite transport|nitrite transport", all_lakes$Product)] <- "Nitrate-nitrite transport"
all_lakes$Category[grep("methanol dehydrogenase|PQQ-dependent dehydrogenase", all_lakes$Product)] <- "Methanol dehydrogenase"
all_lakes$Category[grep("sulfide dehydrogenase", all_lakes$Product)] <- "Sulfide dehydrogenase"
all_lakes$Category[grep("sulfate adenylyltransferase", all_lakes$Product)] <- "Sulfate adenylyltransferase"
all_lakes$Category[grep("methane/ammonia monooxygenase|methane monooxygenase|ammonia monoxygenase", all_lakes$Product)] <- "Methane/ammonia monooxygenase"
all_lakes$Category[grep("carbon-monoxide dehydrogenase", all_lakes$Product)] <- "Carbon-monoxide dehydrogenase"
all_lakes$Category[grep("hexosaminidase", all_lakes$Product)] <- "Hexosaminidase"
all_lakes$Category[grep("glycosyl hydrolase", all_lakes$Product)] <- "Glycosyl hydrolase"
all_lakes$Category[grep("vitamin B12 transport", all_lakes$Product)] <- "Vitamin B12 transport"
all_lakes$Category[grep("citryl-CoA lyase", all_lakes$Product)] <- "Citrate lyase"
all_lakes$Category[grep("cellobiose transport", all_lakes$Product)] <- "Cellobiose transport"
all_lakes$Category[grep("sulfur-oxidizing", all_lakes$Product)] <- "Sulfur oxidation"
all_lakes$Category[grep("photosystem II|Photosystem II", all_lakes$Product)] <- "Photosystem II"
all_lakes$Category[grep("photosystem I |Photosystem I ", all_lakes$Product)] <- "Photosystem I"
all_lakes$Category[grep("photosynthetic reaction centre|photosynthetic reaction center|Photosynthetic reaction center", all_lakes$Product)] <- "Photosynthetic reaction center"
all_lakes$Category[grep("chlorophyllide a reductase|chlorophyllide reductase", all_lakes$Product)] <- "Chlorophyllide reductase"
all_lakes$Category[grep("light-independent protochlorophyllide|ferredoxin protochlorophyllide|protochlorophyllide oxidoreductase", all_lakes$Product)] <- "Light-independent protochlorophyllide reductase"
all_lakes$Category[grep("chlorophyll synthase", all_lakes$Product)] <- "Chlorophyll synthase"
all_lakes$Category[grep("light-harvesting complex I ", all_lakes$Product)] <- "Light-harvesting complex I"
all_lakes$Category[grep("light-harvesting complex II", all_lakes$Product)] <- "Light-harvesting complex II"
all_lakes$Category[grep("alkaline phosphatase|Alkaline phosphatase", all_lakes$Product)] <- "Alkaline phosphatase"
all_lakes$Category[grep("cytochrome c|ATP synthase|Cytochrome c", all_lakes$Product)] <- "Oxidative phosphorylation"
all_lakes$Category[grep("Starch-binding", all_lakes$Product)] <- "OM Starch-binding"
all_lakes$Category[grep("Starch synthase|starch synthase", all_lakes$Product)] <- "Starch synthase"
all_lakes$Category[grep("starch phosphorylase|glycogen/starch/alpha-glucan phosphorylases", all_lakes$Product)] <- "Starch phosphorylase"
all_lakes$Category[grep("carboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes <- all_lakes[which(all_lakes$Category != "unknown"), ]
all_lakes$Condition <- "NA"
all_lakes$Condition[which(all_lakes$Timepoint == 9 | all_lakes$Timepoint == 13 | all_lakes$Timepoint == 17)] <- "day"
all_lakes$Condition[which(all_lakes$Timepoint == 5 | all_lakes$Timepoint == 21 | all_lakes$Timepoint == 1)] <- "night"
metadata$Condition <- "NA"
metadata$Condition[which(metadata$Time == 9 | metadata$Time == 13 | metadata$Time == 17)] <- "day"
metadata$Condition[which(metadata$Time == 5 | metadata$Time == 21 | metadata$Time == 1)] <- "night"
time_comparison <- aggregate(value ~ variable + Category, all_lakes[which(all_lakes$Lake == "Lake Mendota"),], sum)
time_comparison <- reshape(time_comparison, idvar = "Category", timevar = "variable", direction = "wide")
time_comparison <- time_comparison[which(is.na(time_comparison[,2]) == F), ]
rownames(time_comparison) <- time_comparison[,1]
time_comparison <- time_comparison[,2:dim(time_comparison)[2]]
colnames(time_comparison) <- gsub("value.", "", colnames(time_comparison))
input <- as.matrix(time_comparison)
input <- input/500
input <- round(input, digits = 0)
input[which(is.na(input) == T)] <- 0
conditions <- metadata$Condition[match(colnames(time_comparison), metadata$Sample)]
coldata <- data.frame(samples = colnames(time_comparison), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% rownames(sig.res)),]
plot.time <- plot.time[which(plot.time$Lake == "Lake Mendota"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time, aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Lake Mendota") + coord_flip()
all_lakes <- rbind(abun_mnorm, abun_tnorm, abun_snorm)
all_lakes$Category <- "unknown"
all_lakes$Category[grep("ribulose-bisphosphate|Rubisco", all_lakes$Product)] <- "Carbon fixation"
all_lakes$Category[grep("sugar transport|carbohydrate ABC transporter|monosaccharide ABC transporter|mannose ABC transporter ATP-binding protein/fructose ABC transporter ATP-binding protein/ribose|Ribose/xylose/arabinose/galactoside ABC-type transport|Sugar (and other) transport|galactose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("rhodopsin|opsin", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("rhamnose transport|L-rhamnose-H+ transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("spermidine|putrescine|Spermidine|Putrescine", all_lakes$Product)] <- "Polyamine metabolism"
all_lakes$Category[grep("ribose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("raffinose/stachyose/melibiose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("glucose/mannose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("xylose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("glucosaminidase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("glucoside", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("Biopolymer transport|biopolymer transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("maltooligosaccharide transport|moltooligosaccharide transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("carotenoid", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("fructose transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("C4-dicarboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes$Category[grep("chitobiose transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("nitrogenase|nitrogen fixation", all_lakes$Product)] <- "Nitrogen fixation"
all_lakes$Category[grep("chitinase|Chitinase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("motility|gliding", all_lakes$Product)] <- "Motility"
all_lakes$Category[grep("nitrite reductase", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("nitrate reductase", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("tricarboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes$Category[grep("lactose/L-arabinose transport|arabinose ABC transport", all_lakes$Product)] <- "Sugar transport"
all_lakes$Category[grep("methylamine dehydrogenase|trimethylamine monooxygenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("nitrate/nitrite transport|Nitrate/nitrite transport|nitrite transport", all_lakes$Product)] <- "Nitrite/nitrate reduction"
all_lakes$Category[grep("methanol dehydrogenase|PQQ-dependent dehydrogenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("methane/ammonia monooxygenase|methane monooxygenase|ammonia monoxygenase", all_lakes$Product)] <- "C1 metabolism"
all_lakes$Category[grep("hexosaminidase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("glycosyl hydrolase", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("citryl-CoA lyase", all_lakes$Product)] <- "Carbon fixation"
all_lakes$Category[grep("cellobiose transport", all_lakes$Product)] <- "Complex carbon degradation"
all_lakes$Category[grep("sulfur-oxidizing", all_lakes$Product)] <- "Sulfur oxidation"
all_lakes$Category[grep("photosystem II|Photosystem II", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("photosystem I |Photosystem I ", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("photosynthetic reaction centre|photosynthetic reaction center|Photosynthetic reaction center", all_lakes$Product)] <- "Photosynthesis"
all_lakes$Category[grep("chlorophyllide a reductase|chlorophyllide reductase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("light-independent protochlorophyllide|ferredoxin protochlorophyllide|protochlorophyllide oxidoreductase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("chlorophyll synthase", all_lakes$Product)] <- "Chlorophyll synthesis"
all_lakes$Category[grep("alkaline phosphatase|Alkaline phosphatase", all_lakes$Product)] <- "Alkaline phosphatase"
all_lakes$Category[grep("cytochrome c|ATP synthase|Cytochrome c", all_lakes$Product)] <- "Oxidative phosphorylation"
all_lakes$Category[grep("carboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes <- all_lakes[which(all_lakes$Category != "unknown"), ]
all_lakes$Condition <- "NA"
all_lakes$Condition[which(all_lakes$Timepoint == 9 | all_lakes$Timepoint == 13 | all_lakes$Timepoint == 17)] <- "day"
all_lakes$Condition[which(all_lakes$Timepoint == 5 | all_lakes$Timepoint == 21 | all_lakes$Timepoint == 1)] <- "night"
metadata$Condition <- "NA"
metadata$Condition[which(metadata$Time == 9 | metadata$Time == 13 | metadata$Time == 17)] <- "day"
metadata$Condition[which(metadata$Time == 5 | metadata$Time == 21 | metadata$Time == 1)] <- "night"
time_comparison <- aggregate(value ~ variable + Category, all_lakes[which(all_lakes$Lake == "Lake Mendota"),], sum)
time_comparison <- reshape(time_comparison, idvar = "Category", timevar = "variable", direction = "wide")
time_comparison <- time_comparison[which(is.na(time_comparison[,2]) == F), ]
rownames(time_comparison) <- time_comparison[,1]
time_comparison <- time_comparison[,2:dim(time_comparison)[2]]
colnames(time_comparison) <- gsub("value.", "", colnames(time_comparison))
input <- as.matrix(time_comparison)
input <- input/500
input <- round(input, digits = 0)
input[which(is.na(input) == T)] <- 0
conditions <- metadata$Condition[match(colnames(time_comparison), metadata$Sample)]
coldata <- data.frame(samples = colnames(time_comparison), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
plot.time <- all_lakes[which(all_lakes$Category %in% c(rownames(sig.res))),]
plot.time <- plot.time[which(plot.time$Lake == "Lake Mendota"),]
plot.time <- aggregate(value ~ Category + Condition, plot.time, mean)
ggplot(data = plot.time, aes(x = Category, y = value, fill = Condition)) + geom_bar(stat = "identity", position = "dodge")  + geom_bar(stat = "identity", position = "dodge") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + labs(x = NULL, y = "Mean Transcripts/L", title = "Lake Mendota") + coord_flip()
library(ggplot2)
library(cowplot)
library(reshape2)
library(DESeq2)
path <- "C:/Users/Goose and Gander/Documents/"
snorm <- read.csv(paste(path, "geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", sep = ""), header = T, row.names = 1)
tnorm <- read.csv(paste(path, "geodes_data_tables/Trout_ID90_normalized_readcounts.csv", sep = ""), header = T, row.names = 1)
mnorm <- read.csv(paste(path, "geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", sep = ""), header = T, row.names = 1)
snorm <- snorm[, which(colnames(snorm) != "GEODES014.nonrRNA" & colnames(snorm) != "GEODES033.nonrRNA")]
tnorm <- tnorm[, which(colnames(tnorm) != "GEODES065.nonrRNA")]
mnorm <- mnorm[, which(colnames(mnorm) != "GEODES158.nonrRNA")]
mendota_key <- read.csv(paste(path, "geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", sep = ""), header = T)
spark_key <- read.csv(paste(path, "geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", sep = ""), header = T)
trout_key <- read.csv(paste(path, "geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", sep = ""), header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
abun_mnorm <- mnorm[order(rowSums(mnorm), decreasing = T), ]
#Nophoto
# mendota_key <- mendota_key[match(rownames(abun_mnorm), mendota_key$Gene), ]
# abun_mnorm <- abun_mnorm[grep("Cyano", mendota_key$Taxonomy, invert = T), ]
# mendota_key <- mendota_key[match(rownames(abun_mnorm), mendota_key$Gene), ]
# abun_mnorm <- abun_mnorm[grep("photo|Photo|chlorophyll|rhodopsin", mendota_key$Product, invert = T), ]
abun_mnorm <- abun_mnorm[1:20000,]
mendota_key <- mendota_key[match(rownames(abun_mnorm), mendota_key$Gene), ]
abun_tnorm <- tnorm[order(rowSums(tnorm), decreasing = T), ]
abun_tnorm <- abun_tnorm[1:20000,]
trout_key <- trout_key[match(rownames(abun_tnorm), trout_key$Gene), ]
abun_snorm <- snorm[order(rowSums(snorm), decreasing = T), ]
abun_snorm <- abun_snorm[1:20000,]
spark_key <- spark_key[match(rownames(abun_snorm), spark_key$Gene), ]
reduced_searchterm <- "ammonia monooxygenase|nitrogenase|Nitrogenase|Nif|Chitobiase|chitobiase|chitinase|Chitinase|glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase|carbon monoxide dehydrogenase|Carbon monoxide dehydrogenase|carbon-monoxide dehydrogenase|Carbon-monoxide dehydrogenase|sulfite reductase|Sulfite reductase|glucosaminidase|hexosaminidase|glyoxal oxidase|Glyoxal oxidase|galactose oxidase|Galactose oxidase|laccase|Glutathione S-transferase|glutathione S-transferase|ligninase|lignin peroxidase|Lignin peroxidase|manganese peroxidase|Mn peroxidase|Manganese peroxidase|coenzyme M reductase|methane monooxygenase|Methane monooxygenase|nitrate reductase|Nitrate reductase|nitrite reductase|Nitrite reductase|nitric oxide reductase|Nitric oxide reductase|nitrous oxide reductase|Nitrous oxide reductase|nitrous-oxide reductase|Nitrous-oxide reductase|Bacillolysin|bacillolysin|Thermolysin|thermolysin|Fungalysin|fungalysin|nitrate oxidoreductase|Nitrate oxidoreductase|nitrite oxidoreductase|Nitrite oxidoreductase|lactaldehyde dehydrogenase|aldehyde dehydrogenase|phenoloxidase|Phenoloxidase|sox|Sox|sulfate thiol esterase|sulfur oxidation|Sulfur oxidation|sulfur-oxidizing|Sulfur-oxidizing|serine protease|urease|xylose isomerase|Xylose isomerase|citrate lyase|Citrate lyase|sulfate reductase|Sulfate reductase|sulfate kinase|adenylyltransferase|formaldehyde|Formaldehyde|sulfide dehydrogenase|Sulfide dehydrogenase|formate dehydrogenase|Formate dehydrogenase|formyltransferase|hydrazine|Hydrazine|methylamine|Methylamine|methanol|Methanol|DMSO reductase|Rubisco|RuBisCO|rubisco|bisphosphate carboxylase|sulfur dioxygenase|Sulfur dioxygenase|sulfide quinione reductase|Sulfide quinone reductase|opsin|rhamnulose-1-phosphate|Rhamnulose-1-phosphate|fuculose-phosphate|Fuculose phosphate|ribulokinase|mannose-6-phosphate|putrescine|spermidine|polymamine|Putrescine|Spermidine|Polyamine|transport|urea carboxylase|Urea carboxylase|sulfide-quinone reductase|Sulfide-quinione reductase|photo|chlorophyll|Photo|Chlorophyll|alkaline phosphatase|Alkaline phosphatase|cytochrome c|ATP synthase|Cytochrome c|Starch-binding|starch phosphorylase|glycogen/starch/alpha-glucan phosphorylases|Starch synthase|starch synthase|carboxylate transport"
keep <- grep(reduced_searchterm, mendota_key$Product)
abun_mnorm <- abun_mnorm[keep,]
mendota_key <- mendota_key[keep,]
keep <- grep(reduced_searchterm, trout_key$Product)
abun_tnorm <- abun_tnorm[keep,]
trout_key <- trout_key[keep,]
keep <- grep(reduced_searchterm, spark_key$Product)
abun_snorm <- abun_snorm[keep,]
spark_key <- spark_key[keep,]
abun_mnorm$Genes <- rownames(abun_mnorm)
abun_mnorm <- melt(abun_mnorm)
abun_mnorm$variable <- gsub(".nonrRNA", "", abun_mnorm$variable)
abun_mnorm$Timepoint <- metadata$Time[match(abun_mnorm$variable, metadata$Sample)]
abun_mnorm$Lake <- "Lake Mendota"
abun_mnorm$Product <- mendota_key$Product[match(abun_mnorm$Genes, mendota_key$Gene)]
abun_mnorm$Taxonomy <- mendota_key$Taxonomy[match(abun_mnorm$Genes, mendota_key$Gene)]
abun_tnorm$Genes <- rownames(abun_tnorm)
abun_tnorm <- melt(abun_tnorm)
abun_tnorm$variable <- gsub(".nonrRNA", "", abun_tnorm$variable)
abun_tnorm$Timepoint <- metadata$Time[match(abun_tnorm$variable, metadata$Sample)]
abun_tnorm$Lake <- "Trout Bog"
abun_tnorm$Product <- trout_key$Product[match(abun_tnorm$Genes, trout_key$Gene)]
abun_tnorm$Taxonomy <- trout_key$Taxonomy[match(abun_tnorm$Genes, trout_key$Gene)]
abun_snorm$Genes <- rownames(abun_snorm)
abun_snorm <- melt(abun_snorm)
abun_snorm$variable <- gsub(".nonrRNA", "", abun_snorm$variable)
abun_snorm$Timepoint <- metadata$Time[match(abun_snorm$variable, metadata$Sample)]
abun_snorm$Lake <- "Sparkling Lake"
abun_snorm$Product <- spark_key$Product[match(abun_snorm$Genes, spark_key$Gene)]
abun_snorm$Taxonomy <- spark_key$Taxonomy[match(abun_snorm$Genes, spark_key$Gene)]
#Combine all lakes
all_lakes <- rbind(abun_mnorm, abun_tnorm, abun_snorm)
all_lakes$Category <- "unknown"
all_lakes$Category[grep("ribulose-bisphosphate|Rubisco", all_lakes$Product)] <- "RuBisCO"
all_lakes$Category[grep("sugar transport|carbohydrate ABC transporter|monosaccharide ABC transporter|mannose ABC transporter ATP-binding protein/fructose ABC transporter ATP-binding protein/ribose|Ribose/xylose/arabinose/galactoside ABC-type transport|Sugar (and other) transport|galactose transport", all_lakes$Product)] <- "General sugar transport"
all_lakes$Category[grep("rhodopsin|opsin", all_lakes$Product)] <- "Rhodopsin"
all_lakes$Category[grep("Fe transport|iron(III) transport|Fe3+ transport|iron transport|iron complex transport", all_lakes$Product)] <- "Iron transport"
all_lakes$Category[grep("rhamnose transport|L-rhamnose-H+ transport", all_lakes$Product)] <- "Rhamnose transport"
all_lakes$Category[grep("phosphate ABC transporter|phosphate transport|phosphate/phosphonate transport|Phosphate transport", all_lakes$Product)] <- "Phosphate transport"
all_lakes$Category[grep("spermidine|putrescine|Spermidine|Putrescine", all_lakes$Product)] <- "Polyamine metabolism"
all_lakes$Category[grep("ribose transport", all_lakes$Product)] <- "Ribose transport"
all_lakes$Category[grep("amino acid transport|Amino acid transport|amino acid/peptide transport|amino acid ABC transport|amino acid/amide transport|glutamate/aspartate transport", all_lakes$Product)] <- "Amino acid transport"
all_lakes$Category[grep("peptide transport|peptide ABC transport|protein transport", all_lakes$Product)] <- "Peptide transport"
all_lakes$Category[grep("glycerol transport", all_lakes$Product)] <- "Glycerol transport"
all_lakes$Category[grep("serine protease", all_lakes$Product)] <- "Serine protease"
all_lakes$Category[grep("raffinose/stachyose/melibiose transport", all_lakes$Product)] <- "Raff-Stach-Meli transport"
all_lakes$Category[grep("glucose/mannose transport", all_lakes$Product)] <- "Glucose-Mannose transport"
all_lakes$Category[grep("xylose transport", all_lakes$Product)] <- "Xylose transport"
all_lakes$Category[grep("glycerol-3-phosphate transport", all_lakes$Product)] <- "G3P transport"
all_lakes$Category[grep("glucosaminidase", all_lakes$Product)] <- "Glucosaminidase"
all_lakes$Category[grep("glucoside", all_lakes$Product)] <- "Glucoside"
all_lakes$Category[grep("Biopolymer transport|biopolymer transport", all_lakes$Product)] <- "Biopolymer transport"
all_lakes$Category[grep("maltooligosaccharide transport|moltooligosaccharide transport", all_lakes$Product)] <- "Maltooligosaccharide transport"
all_lakes$Category[grep("carotenoid", all_lakes$Product)] <- "Carotenoid"
all_lakes$Category[grep("ammonium transport", all_lakes$Product)] <- "Ammonium transport"
all_lakes$Category[grep("Phage|phage", all_lakes$Product)] <- "Phage-related"
all_lakes$Category[grep("sulfonate transport", all_lakes$Product)] <- "Sulfonate transport"
all_lakes$Category[grep("phosphoribulokinase|Phosphoribulokinase", all_lakes$Product)] <- "Phosphoribulokinase"
all_lakes$Category[grep("fructose transport", all_lakes$Product)] <- "Fructose transport"
all_lakes$Category[grep("C4-dicarboxylate transport", all_lakes$Product)] <- "C4-dicarboxylate transport"
all_lakes$Category[grep("sulfate transport|sulfate-transport", all_lakes$Product)] <- "Sulfate transport"
all_lakes$Category[grep("glycine betaine transport|glycine betaine/proline transport|sorbitol/mannitol transport|osmoprotectant transport", all_lakes$Product)] <- "Osmolyte transport"
all_lakes$Category[grep("chitobiose transport", all_lakes$Product)] <- "Chitobiose transport"
all_lakes$Category[grep("nitrogenase|nitrogen fixation", all_lakes$Product)] <- "Nitrogenase"
all_lakes$Category[grep("chitinase|Chitinase", all_lakes$Product)] <- "Chitinase"
all_lakes$Category[grep("urea transport", all_lakes$Product)] <- "Urea transport"
all_lakes$Category[grep("urease", all_lakes$Product)] <- "Urease"
all_lakes$Category[grep("motility|gliding", all_lakes$Product)] <- "Motility"
all_lakes$Category[grep("nitrite reductase", all_lakes$Product)] <- "Nitrite reductase"
all_lakes$Category[grep("nitrate reductase", all_lakes$Product)] <- "Nitrate reductase"
all_lakes$Category[grep("tricarboxylate transport", all_lakes$Product)] <- "Tricarboxylate transport"
all_lakes$Category[grep("lactose/L-arabinose transport|arabinose ABC transport", all_lakes$Product)] <- "Lactose-arabinose transport"
all_lakes$Category[grep("methylamine dehydrogenase|trimethylamine monooxygenase", all_lakes$Product)] <- "Methylamine metabolism"
all_lakes$Category[grep("nucleoside transport", all_lakes$Product)] <- "Nucleoside transport"
all_lakes$Category[grep("sulfite reductase|Sulfite reductase", all_lakes$Product)] <- "Sulfite reductase"
all_lakes$Category[grep("nitrate/nitrite transport|Nitrate/nitrite transport|nitrite transport", all_lakes$Product)] <- "Nitrate-nitrite transport"
all_lakes$Category[grep("methanol dehydrogenase|PQQ-dependent dehydrogenase", all_lakes$Product)] <- "Methanol dehydrogenase"
all_lakes$Category[grep("sulfide dehydrogenase", all_lakes$Product)] <- "Sulfide dehydrogenase"
all_lakes$Category[grep("sulfate adenylyltransferase", all_lakes$Product)] <- "Sulfate adenylyltransferase"
all_lakes$Category[grep("methane/ammonia monooxygenase|methane monooxygenase|ammonia monoxygenase", all_lakes$Product)] <- "Methane/ammonia monooxygenase"
all_lakes$Category[grep("carbon-monoxide dehydrogenase", all_lakes$Product)] <- "Carbon-monoxide dehydrogenase"
all_lakes$Category[grep("hexosaminidase", all_lakes$Product)] <- "Hexosaminidase"
all_lakes$Category[grep("glycosyl hydrolase", all_lakes$Product)] <- "Glycosyl hydrolase"
all_lakes$Category[grep("vitamin B12 transport", all_lakes$Product)] <- "Vitamin B12 transport"
all_lakes$Category[grep("citryl-CoA lyase", all_lakes$Product)] <- "Citrate lyase"
all_lakes$Category[grep("cellobiose transport", all_lakes$Product)] <- "Cellobiose transport"
all_lakes$Category[grep("sulfur-oxidizing", all_lakes$Product)] <- "Sulfur oxidation"
all_lakes$Category[grep("photosystem II|Photosystem II", all_lakes$Product)] <- "Photosystem II"
all_lakes$Category[grep("photosystem I |Photosystem I ", all_lakes$Product)] <- "Photosystem I"
all_lakes$Category[grep("photosynthetic reaction centre|photosynthetic reaction center|Photosynthetic reaction center", all_lakes$Product)] <- "Photosynthetic reaction center"
all_lakes$Category[grep("chlorophyllide a reductase|chlorophyllide reductase", all_lakes$Product)] <- "Chlorophyllide reductase"
all_lakes$Category[grep("light-independent protochlorophyllide|ferredoxin protochlorophyllide|protochlorophyllide oxidoreductase", all_lakes$Product)] <- "Light-independent protochlorophyllide reductase"
all_lakes$Category[grep("chlorophyll synthase", all_lakes$Product)] <- "Chlorophyll synthase"
all_lakes$Category[grep("light-harvesting complex I ", all_lakes$Product)] <- "Light-harvesting complex I"
all_lakes$Category[grep("light-harvesting complex II", all_lakes$Product)] <- "Light-harvesting complex II"
all_lakes$Category[grep("alkaline phosphatase|Alkaline phosphatase", all_lakes$Product)] <- "Alkaline phosphatase"
all_lakes$Category[grep("cytochrome c|ATP synthase|Cytochrome c", all_lakes$Product)] <- "Oxidative phosphorylation"
all_lakes$Category[grep("Starch-binding", all_lakes$Product)] <- "OM Starch-binding"
all_lakes$Category[grep("Starch synthase|starch synthase", all_lakes$Product)] <- "Starch synthase"
all_lakes$Category[grep("starch phosphorylase|glycogen/starch/alpha-glucan phosphorylases", all_lakes$Product)] <- "Starch phosphorylase"
all_lakes$Category[grep("carboxylate transport", all_lakes$Product)] <- "Carboxylate transport"
all_lakes <- all_lakes[which(all_lakes$Category != "unknown"), ]
all_lakes$Condition <- "NA"
all_lakes$Condition[which(all_lakes$Timepoint == 9 | all_lakes$Timepoint == 13 | all_lakes$Timepoint == 17)] <- "day"
all_lakes$Condition[which(all_lakes$Timepoint == 5 | all_lakes$Timepoint == 21 | all_lakes$Timepoint == 1)] <- "night"
head(all_lakes)
test <- all_lakes[grep("Sugar transport", all_lakes$Category[which(all_lakes$Lake == "Lake Mendota")]), ]
head(test)
test <- all_lakes[grep("General sugar transport", all_lakes$Category[which(all_lakes$Lake == "Lake Mendota")]), ]
head(test)
test <- all_lakes[grep("General sugar transport|Rhamnose transport|Raff-Stach-Meli transport|Glucose-Mannose transport|Xylose transport|Fructose transport|Lactose-arabinose transport", all_lakes$Category[which(all_lakes$Lake == "Lake Mendota")]), ]
table(test$Taxonomy)
table(as.character(test$Taxonomy))
test <- all_lakes[grep("General sugar transport|Rhamnose transport|Raff-Stach-Meli transport|Glucose-Mannose transport|Xylose transport|Fructose transport|Lactose-arabinose transport", all_lakes$Category[which(all_lakes$Lake == "Sparkling Lake")]), ]
table(as.character(test$Taxonomy))
test <- all_lakes[grep("General sugar transport|Rhamnose transport|Raff-Stach-Meli transport|Glucose-Mannose transport|Xylose transport|Fructose transport|Lactose-arabinose transport", all_lakes$Category[which(all_lakes$Lake == "Trout Bog")]), ]
table(as.character(test$Taxonomy))
test <- all_lakes[grep("Carboxylate", all_lakes$Category[which(all_lakes$Lake == "Trout Bog")]), ]
table(as.character(test$Taxonomy))
test <- all_lakes[grep("Carboxylate", all_lakes$Category[which(all_lakes$Lake == "Lake Mendota")]), ]
table(as.character(test$Taxonomy))
test <- all_lakes[grep("Carboxylate", all_lakes$Category[which(all_lakes$Lake == "Sparkling Lake")]), ]
table(as.character(test$Taxonomy))
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
genome <- "2236347069"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2236661000"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
source('C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/genome_centric.R', echo=TRUE)
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_readcounts.csv", header = T, row.names = 1)
genekey <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGS_geneinfo.txt", header = T, row.names = 1)
colnames(read_counts) <- gsub(".nonrRNA", "", colnames(read_counts))
read_counts$GEODES014 <- NULL
read_counts$GEODES033 <- NULL
read_counts$GEODES065 <- NULL
read_counts$GEODES158 <- NULL
#2236347069 D10
#2236876030 J10
#2236661000
#mendota acI-B1
#2236661004
#2236661002
genome <- "2236661005"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2264265190"
lake <- "Sparkling"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2582580711"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2593339188"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2582580642"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
genome <- "2588253500"
lake <- "Trout"
lakekey <- metadata$Lake[match(colnames(read_counts), metadata$Sample)]
#What genes are expressed?
genomekey <- genekey[which(as.character(genekey$X1) == genome), ]
genomekey$Totals <- rowSums(read_counts[match(rownames(genomekey), rownames(read_counts)), which(lakekey == lake)])
genomekey <- genomekey[order(genomekey$Totals, decreasing = T), ]
genomekey[1:100, ]
genomekey[grep("transport", genomekey$X3), ]
