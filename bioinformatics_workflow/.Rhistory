mendota_genome_sums$Genome[i]
for(i in 1:100){
x <- grep(mendota_genome_sums$Genome[i], binned_contigs$V1)
print(x)
print(as.character(mendota_genome_sums$Genome[i]))
}
snorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
snorm <- snorm[, which(colnames(snorm) != "GEODES014.nonrRNA" & colnames(snorm) != "GEODES033.nonrRNA")]
tnorm <- tnorm[, which(colnames(tnorm) != "GEODES065.nonrRNA")]
mnorm <- mnorm[, which(colnames(mnorm) != "GEODES158.nonrRNA")]
mendota_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
spark_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
trout_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
# bin data:
bininfo <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/GEODES_bin_data.csv", header = T)
binned_contigs <- read.table("C:/Users/Goose and Gander/Documents/geodes_data_tables/GEODES_binned_contigs.txt", header = F, colClasses = c("character"))
# GEODES SAG list:
sags_mags <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/GEODES_MAGS_SAGS_info.csv", header = T, sep = '\t', colClasses = c("character", "character", "numeric", "character", "character", "character" , "character", "character", "character", "character"))
sags_mags$Taxonomy <- apply(sags_mags[,5:10], 1, paste, collapse=";")
# Algae info
algae <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/refseq_algae_lengths.csv", header = T, sep = ' ')
# Combine genome info
red.bininfo <- bininfo[,c(1,3)]
red.bininfo$Type <- "Bin"
red.sags_mags <- sags_mags[,c(1,3,4)]
colnames(red.bininfo) <- colnames(red.sags_mags) <- colnames(algae)
genome_info <- rbind(red.bininfo, red.sags_mags, algae)
# Step 1. Replace contig names with bin names where applicable. Remove unbinned contigs.
mendota_index <- which(mendota_key$Genome %in% binned_contigs$V1)
mendota_to_replace <- mendota_key$Genome[mendota_index]
mendota_bins <- binned_contigs$V2[match(mendota_to_replace, binned_contigs$V1)]
mendota_key$Genome[mendota_index] <- mendota_bins
# remove <- substr(mendota_key$Genome, start = 1, stop = 2)
# mendota_key <- mendota_key[which(remove != "Ga"), ]
trout_index <- which(trout_key$Genome %in% binned_contigs$V1)
trout_to_replace <- trout_key$Genome[trout_index]
trout_bins <- binned_contigs$V2[match(trout_to_replace, binned_contigs$V1)]
trout_key$Genome[trout_index] <- trout_bins
# remove <- substr(trout_key$Genome, start = 1, stop = 2)
# trout_key <- trout_key[which(remove != "Ga"), ]
spark_index <- which(spark_key$Genome %in% binned_contigs$V1)
spark_to_replace <- spark_key$Genome[spark_index]
spark_bins <- binned_contigs$V2[match(spark_to_replace, binned_contigs$V1)]
spark_key$Genome[spark_index] <- spark_bins
# remove <- substr(spark_key$Genome, start = 1, stop = 2)
# spark_key <- spark_key[which(remove != "Ga"), ]
# Step 2. Sum expression by genome
mnorm <- mnorm[match(mendota_key$Gene, rownames(mnorm)), ]
mendota_sums <- data.frame(Gene = mendota_key$Gene, Genome = mendota_key$Genome, Totals = rowSums(mnorm))
mendota_genome_sums <- aggregate(Totals ~ Genome, mendota_sums, sum)
tnorm <- tnorm[match(trout_key$Gene, rownames(tnorm)), ]
trout_sums <- data.frame(Gene = trout_key$Gene, Genome = trout_key$Genome, Totals = rowSums(tnorm))
trout_genome_sums <- aggregate(Totals ~ Genome, trout_sums, sum)
snorm <- snorm[match(spark_key$Gene, rownames(snorm)), ]
spark_sums <- data.frame(Gene = spark_key$Gene, Genome = spark_key$Genome, Totals = rowSums(snorm))
spark_genome_sums <- aggregate(Totals ~ Genome, spark_sums, sum)
# Clean up unnecessary files
rm(mnorm)
rm(snorm)
rm(tnorm)
rm(mendota_key)
rm(spark_key)
rm(trout_key)
rm(binned_contigs)
rm(red.bininfo)
rm(red.sags_mags)
rm(mendota_sums)
rm(spark_sums)
rm(trout_sums)
rm(mendota_bins)
rm(spark_bins)
rm(trout_bins)
rm(mendota_index)
rm(trout_index)
rm(spark_index)
rm(mendota_to_replace)
rm(spark_to_replace)
rm(trout_to_replace)
rm(remove)
mendota_genome_sums$Genome <- factor(mendota_genome_sums$Genome, levels = mendota_genome_sums$Genome[order(mendota_genome_sums$Totals, decreasing = T)])
spark_genome_sums$Genome <- factor(spark_genome_sums$Genome, levels = spark_genome_sums$Genome[order(spark_genome_sums$Totals, decreasing = T)])
trout_genome_sums$Genome <- factor(trout_genome_sums$Genome, levels = trout_genome_sums$Genome[order(trout_genome_sums$Totals, decreasing = T)])
mendota_genome_sums <- mendota_genome_sums[order(mendota_genome_sums$Totals, decreasing = T), ]
spark_genome_sums <- spark_genome_sums[order(spark_genome_sums$Totals, decreasing = T), ]
trout_genome_sums <- trout_genome_sums[order(trout_genome_sums$Totals, decreasing = T), ]
mendota_genome_sums[1:100, ]
trout_genome_sums[1:100, ]
mendota_key[grep("Ga0164294_10000172", mendota_key$Genome), ]
mendota_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
spark_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
trout_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T, colClasses = c("character"))
mendota_key[grep("Ga0164294_10000172", mendota_key$Genome), ]
head(mendota_key$Taxonomy[grep("Ga0164294_10000172", mendota_key$Genome)]
)
#Contigs in top 100 not in bins:
# Ga0164294_10000172 cyanobacteria
# Ga0164292_12430844
# Ga0164294_13130383
# Ga0164295_13777810
head(mendota_key$Taxonomy[grep("Ga0164292_12430844", mendota_key$Genome)])
#Contigs in top 100 not in bins:
# Ga0164294_10000172 cyanobacteria
# Ga0164292_12430844 unclassified
# Ga0164294_13130383
# Ga0164295_13777810
head(mendota_key$Taxonomy[grep("Ga0164294_13130383", mendota_key$Genome)])
#Contigs in top 100 not in bins:
# Ga0164294_10000172 cyanobacteria
# Ga0164292_12430844 unclassified
# Ga0164294_13130383 unclassified
# Ga0164295_13777810
head(mendota_key$Taxonomy[grep("Ga0164295_13777810", mendota_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10000711", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10000716", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10000713", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10023712", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10047903", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10003981", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10227194", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10003982", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_10022544", trout_key$Genome)])
head(trout_key$Taxonomy[grep("Ga0164296_12821481", trout_key$Genome)])
spark_genome_sums[1:100, ]
head(spark_key$Taxonomy[grep("Ga0164294_10000172", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0164295_13296966", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0187843_11222081", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0164295_11120007", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0164294_10000120", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0187843_11256767", spark_key$Genome)])
head(spark_key$Taxonomy[grep("Ga0164295_13443099", spark_key$Genome)])
genome_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_genomecounts.csv", header = T, row.names = 1)
head(genome_coutns)
head(genome_counts)
mt_size <- read.table("C:/Users/Goose and Gander/Desktop/geodes/sample_data/MT_size.txt")
head(mt_size)
read_counts <- read.table("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_readcounts.txt", header = T, row.names = 1)
read_counts <- read.table("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_readcounts.txt", header = T, row.names = 1, sep = '\t')
head(read_counts)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_readcounts.txt", header = T, row.names = 1)
mapped_reads <- colSums(read_counts)
head(mapped_reads)
head(read_counts)
tail(read_counts)
read_counts <- read_counts[which(is.na(read_counts[,1] == F)), ]
mapped_reads <- colSums(read_counts)
read_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_readcounts.txt", header = T, row.names = 1)
read_counts <- read_counts[which(is.na(read_counts[,1]) == F), ]
mapped_reads <- colSums(read_counts)
head(mapped_reads)
head(mt_size)
tail(mt_size)
tail(mapped_reads)
percent <- mapped_reads/mt_size$V2 * 100
hist(percent)
mean(percent)
genome_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_genomecounts.csv", header = T, row.names = 1)
genome_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_genomecounts.csv", header = T, row.names = 1)
# mt_size <- read.table("C:/Users/Goose and Gander/Desktop/geodes/sample_data/MT_size.txt")
#
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
genomeinfo <- read.csv(file = "C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/genome_phylogeny.csv", header = T, row.names = 1)
head(genomeinfo)
genomeinfo$Phylum[which(genomeinfo$Phylum == "Proteobacteria")] <- genomeinfo$Class[which(genomeinfo$Phylum == "Proteobacteria")]
genomeinfo <- read.csv(file = "C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/genome_phylogeny.csv", header = T, row.names = 1, colClasses = c("character"))
genomeinfo$Phylum[which(genomeinfo$Phylum == "Proteobacteria")] <- genomeinfo$Class[which(genomeinfo$Phylum == "Proteobacteria")]
head(genomeinfo)
genome_counts <- genome_counts[, which(colnames(genome_counts)  != "GEODES014.nonrRNA" & colnames(genome_counts)  != "GEODES033.nonrRNA" & colnames(genome_counts)  != "GEODES065.nonrRNA" & colnames(genome_counts)  != "GEODES158.nonrRNA")]
# split by lake
colnames(genome_counts) <- gsub(".nonrRNA", colnames(genome_counts))
# split by lake
colnames(genome_counts) <- gsub(".nonrRNA", "", colnames(genome_counts))
match(colnames(genome_counts), metadata$Sample[which(metadata$Lake == "Mendota")])
match(metadata$Sample[which(metadata$Lake == "Mendota")], colnames(genome_counts))
mendota_samples <- match(metadata$Sample[which(metadata$Lake == "Mendota")], colnames(genome_counts))
mendota_samples <- mendota_samples[which(is.na(mendota_samples) == F)]
mendota_counts <- genome_counts[, mendota_samples ]
head(mendota_counts)
spark_samples <- match(metadata$Sample[which(metadata$Lake == "Sparkling")], colnames(genome_counts))
trout_samples <- match(metadata$Sample[which(metadata$Lake == "Trout")], colnames(genome_counts))
spark_samples <- trout_samples[which(is.na(trout_samples) == F)]
trout_samples <- spark_samples[which(is.na(spark_samples) == F)]
spark_counts <- genome_counts[, spark_samples ]
trout_counts <- genome_counts[, trout_samples ]
head(spark_counts)
head(trout_counts)
mendota_samples <- match(metadata$Sample[which(metadata$Lake == "Mendota")], colnames(genome_counts))
spark_samples <- match(metadata$Sample[which(metadata$Lake == "Sparkling")], colnames(genome_counts))
trout_samples <- match(metadata$Sample[which(metadata$Lake == "Trout")], colnames(genome_counts))
mendota_samples <- mendota_samples[which(is.na(mendota_samples) == F)]
trout_samples <- trout_samples[which(is.na(trout_samples) == F)]
spark_samples <- spark_samples[which(is.na(spark_samples) == F)]
mendota_counts <- genome_counts[, mendota_samples ]
spark_counts <- genome_counts[, spark_samples ]
trout_counts <- genome_counts[, trout_samples ]
head(spark_counts)
head(trout_counts)
match(genomeinfo$Genome.ID, rownames(mendota_counts))
head(genomeinfo)
match(rownames(genomeinfo), rownames(mendota_counts))
match(rownames(mendota_counts), rownames(genomeinfo))
mendota_plot <- data.frame("Genome" = rownames(mendota_counts), "Total" = rowSums(mendota_counts), "Phylum" = genomeinfo$Phylum[match(rownames(mendota_counts), rownames(genomeinfo))])
head(mendota_plot)
tail(mendota_plot)
trout_plot <- data.frame("Genome" = rownames(trout_counts), "Total" = rowSums(trout_counts), "Phylum" = genomeinfo$Phylum[match(rownames(trout_counts), rownames(genomeinfo))])
spark_plot <- data.frame("Genome" = rownames(spark_counts), "Total" = rowSums(spark_counts), "Phylum" = genomeinfo$Phylum[match(rownames(spark_counts), rownames(genomeinfo))])
trout_plot <- trout_plot[order(trout_plot$Total, decreasing = T), ]
spark_plot <- spark_plot[order(spark_plot$Total, decreasing = T), ]
ggplot(data = mendota_plot, aes(x = Genome, y = Total, fill = Phylum)) + geom_bar(stat = "identity")
genome_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_genomecounts.csv", header = T, row.names = 1)
genome_counts <- genome_counts[, which(colnames(genome_counts)  != "GEODES014.nonrRNA" & colnames(genome_counts)  != "GEODES033.nonrRNA" & colnames(genome_counts)  != "GEODES065.nonrRNA" & colnames(genome_counts)  != "GEODES158.nonrRNA")]
# mt_size <- read.table("C:/Users/Goose and Gander/Desktop/geodes/sample_data/MT_size.txt")
#
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
genomeinfo <- read.csv(file = "C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/genome_phylogeny.csv", header = T, row.names = 1, colClasses = c("character"))
genomeinfo$Phylum[which(genomeinfo$Phylum == "Proteobacteria")] <- genomeinfo$Class[which(genomeinfo$Phylum == "Proteobacteria")]
# read_counts <- read_counts[which(is.na(read_counts[,1]) == F), ]
# mapped_reads <- colSums(read_counts)
#
# percent <- mapped_reads/mt_size$V2 * 100
# Rank abundance curves
# split by lake
colnames(genome_counts) <- gsub(".nonrRNA", "", colnames(genome_counts))
mendota_samples <- match(metadata$Sample[which(metadata$Lake == "Mendota")], colnames(genome_counts))
spark_samples <- match(metadata$Sample[which(metadata$Lake == "Sparkling")], colnames(genome_counts))
trout_samples <- match(metadata$Sample[which(metadata$Lake == "Trout")], colnames(genome_counts))
mendota_samples <- mendota_samples[which(is.na(mendota_samples) == F)]
trout_samples <- trout_samples[which(is.na(trout_samples) == F)]
spark_samples <- spark_samples[which(is.na(spark_samples) == F)]
mendota_counts <- genome_counts[, mendota_samples ]
spark_counts <- genome_counts[, spark_samples ]
trout_counts <- genome_counts[, trout_samples ]
mendota_plot <- data.frame("Genome" = rownames(mendota_counts), "Total" = rowSums(mendota_counts), "Phylum" = genomeinfo$Phylum[match(rownames(mendota_counts), rownames(genomeinfo))])
trout_plot <- data.frame("Genome" = rownames(trout_counts), "Total" = rowSums(trout_counts), "Phylum" = genomeinfo$Phylum[match(rownames(trout_counts), rownames(genomeinfo))])
spark_plot <- data.frame("Genome" = rownames(spark_counts), "Total" = rowSums(spark_counts), "Phylum" = genomeinfo$Phylum[match(rownames(spark_counts), rownames(genomeinfo))])
mendota_plot <- mendota_plot[order(mendota_plot$Total, decreasing = T), ]
trout_plot <- trout_plot[order(trout_plot$Total, decreasing = T), ]
spark_plot <- spark_plot[order(spark_plot$Total, decreasing = T), ]
ggplot(data = mendota_plot, aes(x = Genome, y = Total, fill = Phylum)) + geom_bar(stat = "identity")
library(ggplot2)
library(cowplot)
ggplot(data = mendota_plot, aes(x = Genome, y = Total, fill = Phylum)) + geom_bar(stat = "identity")
mendota_plot$Genome <- factor(mendota_plot$Genome, levels = mendota_plot$Genome)
ggplot(data = mendota_plot, aes(x = Genome, y = Total, fill = Phylum)) + geom_bar(stat = "identity")
ggplot(data = mendota_plot[1:100,], aes(x = Genome, y = Total, fill = Phylum)) + geom_bar(stat = "identity")
head(genomeinfo)
sags_mags <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/GEODES_MAGS_SAGS_info.csv", header = T, sep = '\t', colClasses = c("character", "character", "numeric", "character", "character", "character" , "character", "character", "character", "character"))
head(sags_mags)
match(sags_mags$IMGOID, mendota_plot$Genome)
match(mendota_plot$Genome, sags_mags$IMGOID)
sags_mags[1,]
sags_mags[105,]
mendota_plot$Genome[1,]
mendota_plot$Genome[1]
mendota_plot$Length <- sags_mags$Length[match(mendota_plot$Genome, sags_mags$IMGOID)]
head(mendota_plot)
trout_plot$Length <- sags_mags$Length[match(trout_plot$Genome, sags_mags$IMGOID)]
spark_plot$Length <- sags_mags$Length[match(spark_plot$Genome, sags_mags$IMGOID)]
trout_plot$NormTotal <- trout_plot$Total/trout_plot$Length
spark_plot$NormTotal <- spark_plot$Total/spark_plot$Length
mendota_plot <- mendota_plot[order(mendota_plot$NormTotal, decreasing = T), ]
trout_plot <- trout_plot[order(trout_plot$NormTotal, decreasing = T), ]
spark_plot <- spark_plot[order(spark_plot$NormTotal, decreasing = T), ]
head(mendota_plot)
mendota_plot$NormTotal <- mendota_plot$Total/mendota_plot$Length
mendota_plot <- mendota_plot[order(mendota_plot$NormTotal, decreasing = T), ]
mendota_plot$Genome <- factor(mendota_plot$Genome, levels = mendota_plot$Genome)
ggplot(data = mendota_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Mendota") + theme(axis.text.x = element_blank())
trout_plot$Genome <- factor(trout_plot$Genome, levels = trout_plot$Genome)
spark_plot$Genome <- factor(spark_plot$Genome, levels = spark_plot$Genome)
ggplot(data = trout_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Trout Bog") + theme(axis.text.x = element_blank())
ggplot(data = spark_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Sparkling Lake") + theme(axis.text.x = element_blank())
ggplot(data = mendota_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Mendota") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
ggplot(data = trout_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Trout Bog") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
ggplot(data = spark_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Sparkling Lake") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
genomeinfo[which(rownames(geneominfo) == "2582580553"), ]
genomeinfo[which(rownames(genomeinfo) == "2582580553"), ]
library(ggplot2)
library(cowplot)
library(reshape2)
library(GeneCycle)
library(DESeq2)
snorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
snorm <- snorm[, which(colnames(snorm) != "GEODES014.nonrRNA" & colnames(snorm) != "GEODES033.nonrRNA")]
tnorm <- tnorm[, which(colnames(tnorm) != "GEODES065.nonrRNA")]
mnorm <- mnorm[, which(colnames(mnorm) != "GEODES158.nonrRNA")]
mendota_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
abun_mnorm <- mnorm[order(rowSums(mnorm), decreasing = T), ]
abun_mnorm <- abun_mnorm[1:20000,]
colnames(abun_mnorm) <- gsub(".nonrRNA", "", colnames(abun_mnorm))
input <- as.matrix(abun_mnorm)
input <- input/100
input <- round(input, digits = 0)
conditions <- metadata$Time[match(colnames(abun_mnorm), metadata$Sample)]
conditions[which(conditions == 9 | conditions == 13 | conditions == 17)] <- "day"
conditions[which(conditions == 5 | conditions == 21 | conditions == 1)] <- "night"
coldata <- data.frame(samples = colnames(abun_mnorm), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
sig.res.day <- sig.res[which(sig.res$log2FoldChange < 0), ]
sig.res.night <- sig.res[which(sig.res$log2FoldChange > 0), ]
sig.res.day.key <- mendota_key[match(rownames(sig.res.day), mendota_key$Gene),]
sig.res.night.key <- mendota_key[match(rownames(sig.res.night), mendota_key$Gene),]
# Make plots of this aggreagted by short taxa and groupd products
sig.res.day.key$Taxonomy <- gsub(";;;", "", sig.res.day.key$Taxonomy)
sig.res.day.key$Taxonomy <- gsub(";;", "", sig.res.day.key$Taxonomy)
sig.res.day.key$Taxonomy <- gsub(";$", "", sig.res.day.key$Taxonomy)
spl <- strsplit(as.character(sig.res.day.key$Taxonomy), ";")
sig.res.day.key$ShortTax <- sapply(lapply(spl, tail, 1), paste, collapse=";")
sig.res.night.key$Taxonomy <- gsub(";;;", "", sig.res.night.key$Taxonomy)
sig.res.night.key$Taxonomy <- gsub(";;", "", sig.res.night.key$Taxonomy)
sig.res.night.key$Taxonomy <- gsub(";$", "", sig.res.night.key$Taxonomy)
spl <- strsplit(as.character(sig.res.night.key$Taxonomy), ";")
sig.res.night.key$ShortTax <- sapply(lapply(spl, tail, 1), paste, collapse=";")
# Make column by certain key words
sig.res.day.key$Category <- "None"
sig.res.day.key$Category[grep("photo|Photo", sig.res.day.key$Product)] <- "Photosynthesis"
sig.res.day.key$Category[grep("rhodopsin|Rhodopsin|phytoene|lycopene|carotene|Phytoene|Lycopene|Carotene", sig.res.day.key$Product)] <- "Rhodopsin"
sig.res.day.key$Category[grep("sugar|Sugar|ribose|Ribose|hexose|maltose|carbohydrate|Carbohydrate|ose transport", sig.res.day.key$Product)] <- "Sugar degradation"
sig.res.day.key$Category[grep("rbcL|ribulose-bisphosphate carboxylase", sig.res.day.key$Product)] <- "RuBisCO"
sig.res.day.key$Category[grep("putrescine|Putrescine|spermidine|Spermidine", sig.res.day.key$Product)] <- "Polyamines"
sig.res.day.key$Category[grep("citrate lyase|Citrate lyase", sig.res.day.key$Product)] <- "rTCA"
sig.res.day.key$Category[grep("nitrogenase|Nitrogenase|NifH|NifD|NifK", sig.res.day.key$Product)] <- "Nitrogenase"
sig.res.day.key$Category[grep("Chitobiase|chitobiase|chitinase|Chitinase", sig.res.day.key$Product)] <- "Chitinase"
sig.res.day.key$Category[grep("glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase", sig.res.day.key$Product)] <- "Glycoside_Hydrolase"
sig.res.day.key$Category[grep("alkaline phosphatase|Alkaline phosphatase", sig.res.day.key$Product)] <- "Alkaline_phosphatase"
sig.res.day.key$Category[grep("cellulase|cellulose", sig.res.day.key$Product)] <- "Cellulase"
sig.res.day.key$Category[grep("peroxidase|peroxide|catalase", sig.res.day.key$Product)] <- "ROS"
sig.res.day.key$Category[grep("ammonia monooxygenase|methane monoxygenase", sig.res.day.key$Product)] <- "Methane/Ammonia"
sig.res.day.key$Category[grep("nitrite reductase|Nitrite reductase|nitrite oxidoreductase|Nitrite oxidoreductase", sig.res.day.key$Product)] <- "Nitrite_reduction"
sig.res.day.key$Category[grep("urease", sig.res.day.key$Product)] <- "Urease"
sig.res.day.key$Category[grep("protease", sig.res.day.key$Product)] <- "Protease"
sig.res.night.key$Category <- "None"
sig.res.night.key$Category[grep("photo|Photo", sig.res.night.key$Product)] <- "Photosynthesis"
sig.res.night.key$Category[grep("rhodopsin|Rhodopsin|phytoene|lycopene|carotene|Phytoene|Lycopene|Carotene", sig.res.night.key$Product)] <- "Rhodopsin"
sig.res.night.key$Category[grep("sugar|Sugar|ribose|Ribose|hexose|maltose|carbohydrate|Carbohydrate|ose transport", sig.res.night.key$Product)] <- "Sugar degradation"
sig.res.night.key$Category[grep("rbcL|ribulose-bisphosphate carboxylase", sig.res.night.key$Product)] <- "RuBisCO"
sig.res.night.key$Category[grep("putrescine|Putrescine|spermidine|Spermidine", sig.res.night.key$Product)] <- "Polyamines"
sig.res.night.key$Category[grep("citrate lyase|Citrate lyase", sig.res.night.key$Product)] <- "rTCA"
sig.res.night.key$Category[grep("nitrogenase|Nitrogenase|NifH|NifD|NifK", sig.res.night.key$Product)] <- "Nitrogenase"
sig.res.night.key$Category[grep("Chitobiase|chitobiase|chitinase|Chitinase", sig.res.night.key$Product)] <- "Chitinase"
sig.res.night.key$Category[grep("glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase", sig.res.night.key$Product)] <- "Glycoside_Hydrolase"
sig.res.night.key$Category[grep("alkaline phosphatase|Alkaline phosphatase", sig.res.night.key$Product)] <- "Alkaline_phosphatase"
sig.res.night.key$Category[grep("cellulase|cellulose", sig.res.night.key$Product)] <- "Cellulase"
sig.res.night.key$Category[grep("peroxidase|peroxide|catalase", sig.res.night.key$Product)] <- "ROS"
sig.res.night.key$Category[grep("ammonia monooxygenase|methane monoxygenase", sig.res.night.key$Product)] <- "Methane/Ammonia"
sig.res.night.key$Category[grep("nitrite reductase|Nitrite reductase|nitrite oxidoreductase|Nitrite oxidoreductase", sig.res.night.key$Product)] <- "Nitrite_reduction"
sig.res.night.key$Category[grep("urease", sig.res.night.key$Product)] <- "Urease"
sig.res.night.key$Category[grep("protease", sig.res.night.key$Product)] <- "Protease"
sig.res.day.key$Condition <- "day"
sig.res.night.key$Condition <- "night"
sig.abun_mnorm_day <- abun_mnorm[match(sig.res.day.key$Gene, rownames(abun_mnorm)), which(conditions == "day")]
sig.res.day.key$totals <- rowSums(sig.abun_mnorm_day)
sig.abun_mnorm_night <- abun_mnorm[match(sig.res.night.key$Gene, rownames(abun_mnorm)), which(conditions == "night")]
sig.res.night.key$totals <- rowSums(sig.abun_mnorm_night)
sig.res.key <- rbind(sig.res.day.key, sig.res.night.key)
# Add in zero counts so bars are the same widths
dummy <- data.frame("Gene" = rep("nogene", 4), "Genome" = rep("nogenome", 4), "Taxonomy" = rep("notax", 4), "Product" = rep("noproduct", 4), "ShortTax" = rep("noshorttax", 4), "Category" = c("Alkaline_phosphatase", "Chitinase", "Nitrite_reduction", "Polyamines"), "Condition" = c("night", "day", "night", "day"), "totals" = c(0, 0, 0, 0))
sig.res.key <- rbind(sig.res.key, dummy)
ggplot(data = sig.res.key[which(sig.res.key$Category != "None" & sig.res.key$Category != "Photosynthesis"), ], aes(x = Category, y = totals, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + labs(title = "Sparkling Lake", x = NULL, y = "Transcripts/L") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_y_continuous(expand = c(0, 0))
ggplot(data = sig.res.key[which(sig.res.key$Category != "None" & sig.res.key$Category != "Photosynthesis"), ], aes(x = Category, y = totals, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + labs(title = "Mendota", x = NULL, y = "Transcripts/L") + scale_fill_manual(values = c("darkgoldenrod2", "royalblue4")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_y_continuous(expand = c(0, 0))
abun_tnorm <- tnorm[order(rowSums(tnorm), decreasing = T), ]
abun_tnorm <- abun_tnorm[1:20000,]
colnames(abun_tnorm) <- gsub(".nonrRNA", "", colnames(abun_tnorm))
input <- as.matrix(abun_tnorm)
input <- input/500
input <- round(input, digits = 0)
conditions <- metadata$Time[match(colnames(abun_tnorm), metadata$Sample)]
conditions[which(conditions == 9 | conditions == 13 | conditions == 17)] <- "day"
conditions[which(conditions == 5 | conditions == 21 | conditions == 1)] <- "night"
coldata <- data.frame(samples = colnames(abun_tnorm), conditions)
cds <- DESeqDataSetFromMatrix(countData = input,
colData = coldata,
design = ~ conditions)
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
dds <- DESeq(cds)
res <- results(dds)
sig.res <- res[which(res$padj < 0.05), ]
sig.res.day <- sig.res[which(sig.res$log2FoldChange < 0), ]
sig.res.night <- sig.res[which(sig.res$log2FoldChange > 0), ]
sig.res.day.key <- trout_key[match(rownames(sig.res.day), trout_key$Gene),]
sig.res.night.key <- trout_key[match(rownames(sig.res.night), trout_key$Gene),]
# Make plots of this aggreagted by short taxa and groupd products
sig.res.day.key$Taxonomy <- gsub(";;;", "", sig.res.day.key$Taxonomy)
sig.res.day.key$Taxonomy <- gsub(";;", "", sig.res.day.key$Taxonomy)
sig.res.day.key$Taxonomy <- gsub(";$", "", sig.res.day.key$Taxonomy)
spl <- strsplit(as.character(sig.res.day.key$Taxonomy), ";")
sig.res.day.key$ShortTax <- sapply(lapply(spl, tail, 1), paste, collapse=";")
sig.res.night.key$Taxonomy <- gsub(";;;", "", sig.res.night.key$Taxonomy)
sig.res.night.key$Taxonomy <- gsub(";;", "", sig.res.night.key$Taxonomy)
sig.res.night.key$Taxonomy <- gsub(";$", "", sig.res.night.key$Taxonomy)
spl <- strsplit(as.character(sig.res.night.key$Taxonomy), ";")
sig.res.night.key$ShortTax <- sapply(lapply(spl, tail, 1), paste, collapse=";")
# Make column by certain key words
sig.res.day.key$Category <- "None"
sig.res.day.key$Category[grep("photo|Photo", sig.res.day.key$Product)] <- "Photosynthesis"
sig.res.day.key$Category[grep("rhodopsin|Rhodopsin|phytoene|lycopene|carotene|Phytoene|Lycopene|Carotene", sig.res.day.key$Product)] <- "Rhodopsin"
sig.res.day.key$Category[grep("sugar|Sugar|ribose|Ribose|hexose|maltose|carbohydrate|Carbohydrate|ose transport", sig.res.day.key$Product)] <- "Sugar degradation"
sig.res.day.key$Category[grep("rbcL|ribulose-bisphosphate carboxylase", sig.res.day.key$Product)] <- "RuBisCO"
sig.res.day.key$Category[grep("putrescine|Putrescine|spermidine|Spermidine", sig.res.day.key$Product)] <- "Polyamines"
sig.res.day.key$Category[grep("citrate lyase|Citrate lyase", sig.res.day.key$Product)] <- "rTCA"
sig.res.day.key$Category[grep("nitrogenase|Nitrogenase|NifH|NifD|NifK", sig.res.day.key$Product)] <- "Nitrogenase"
sig.res.day.key$Category[grep("Chitobiase|chitobiase|chitinase|Chitinase", sig.res.day.key$Product)] <- "Chitinase"
sig.res.day.key$Category[grep("glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase", sig.res.day.key$Product)] <- "Glycoside_Hydrolase"
sig.res.day.key$Category[grep("alkaline phosphatase|Alkaline phosphatase", sig.res.day.key$Product)] <- "Alkaline_phosphatase"
sig.res.day.key$Category[grep("cellulase|cellulose", sig.res.day.key$Product)] <- "Cellulase"
sig.res.day.key$Category[grep("peroxidase|peroxide|catalase", sig.res.day.key$Product)] <- "ROS"
sig.res.day.key$Category[grep("ammonia monooxygenase|methane monoxygenase", sig.res.day.key$Product)] <- "Methane/Ammonia"
sig.res.day.key$Category[grep("nitrite reductase|Nitrite reductase|nitrite oxidoreductase|Nitrite oxidoreductase", sig.res.day.key$Product)] <- "Nitrite_reduction"
sig.res.day.key$Category[grep("urease", sig.res.day.key$Product)] <- "Urease"
sig.res.day.key$Category[grep("protease", sig.res.day.key$Product)] <- "Protease"
sig.res.night.key$Category <- "None"
sig.res.night.key$Category[grep("photo|Photo", sig.res.night.key$Product)] <- "Photosynthesis"
sig.res.night.key$Category[grep("rhodopsin|Rhodopsin|phytoene|lycopene|carotene|Phytoene|Lycopene|Carotene", sig.res.night.key$Product)] <- "Rhodopsin"
sig.res.night.key$Category[grep("sugar|Sugar|ribose|Ribose|hexose|maltose|carbohydrate|Carbohydrate|ose transport", sig.res.night.key$Product)] <- "Sugar degradation"
sig.res.night.key$Category[grep("rbcL|ribulose-bisphosphate carboxylase", sig.res.night.key$Product)] <- "RuBisCO"
sig.res.night.key$Category[grep("putrescine|Putrescine|spermidine|Spermidine", sig.res.night.key$Product)] <- "Polyamines"
sig.res.night.key$Category[grep("citrate lyase|Citrate lyase", sig.res.night.key$Product)] <- "rTCA"
sig.res.night.key$Category[grep("nitrogenase|Nitrogenase|NifH|NifD|NifK", sig.res.night.key$Product)] <- "Nitrogenase"
sig.res.night.key$Category[grep("Chitobiase|chitobiase|chitinase|Chitinase", sig.res.night.key$Product)] <- "Chitinase"
sig.res.night.key$Category[grep("glycoside hydrolase|Glycoside hydrolase|glycosyl hydrolase", sig.res.night.key$Product)] <- "Glycoside_Hydrolase"
sig.res.night.key$Category[grep("alkaline phosphatase|Alkaline phosphatase", sig.res.night.key$Product)] <- "Alkaline_phosphatase"
sig.res.night.key$Category[grep("cellulase|cellulose", sig.res.night.key$Product)] <- "Cellulase"
sig.res.night.key$Category[grep("peroxidase|peroxide|catalase", sig.res.night.key$Product)] <- "ROS"
sig.res.night.key$Category[grep("ammonia monooxygenase|methane monoxygenase", sig.res.night.key$Product)] <- "Methane/Ammonia"
sig.res.night.key$Category[grep("nitrite reductase|Nitrite reductase|nitrite oxidoreductase|Nitrite oxidoreductase", sig.res.night.key$Product)] <- "Nitrite_reduction"
sig.res.night.key$Category[grep("urease", sig.res.night.key$Product)] <- "Urease"
sig.res.night.key$Category[grep("protease", sig.res.night.key$Product)] <- "Protease"
sig.res.day.key$Condition <- "day"
sig.res.night.key$Condition <- "night"
sig.abun_tnorm_day <- abun_tnorm[match(sig.res.day.key$Gene, rownames(abun_tnorm)), which(conditions == "day")]
sig.res.day.key$totals <- rowSums(sig.abun_tnorm_day)
sig.abun_tnorm_night <- abun_tnorm[match(sig.res.night.key$Gene, rownames(abun_tnorm)), which(conditions == "night")]
sig.res.night.key$totals <- rowSums(sig.abun_tnorm_night)
sig.res.key <- rbind(sig.res.day.key, sig.res.night.key)
dummy <- data.frame("Gene" = rep("nogene", 3), "Genome" = rep("nogenome", 3), "Taxonomy" = rep("notax", 3), "Product" = rep("noproduct", 3), "ShortTax" = rep("noshorttax", 3), "Category" = c("Chitinase", "Rhodopsin", "Urease"), "Condition" = c("day", "night", "day"), "totals" = c(0, 0, 0))
sig.res.key <- rbind(sig.res.key, dummy)
ggplot(data = sig.res.key[which(sig.res.key$Category != "None"), ], aes(x = Category, y = totals, fill = Condition)) + geom_bar(stat = "identity", position = "dodge") + labs(title = "troutling")
genome_counts <- read.csv("C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/GEODES2refMAGsSAGs_normalized_genomecounts.csv", header = T, row.names = 1)
genome_counts <- genome_counts[, which(colnames(genome_counts)  != "GEODES014.nonrRNA" & colnames(genome_counts)  != "GEODES033.nonrRNA" & colnames(genome_counts)  != "GEODES065.nonrRNA" & colnames(genome_counts)  != "GEODES158.nonrRNA")]
# mt_size <- read.table("C:/Users/Goose and Gander/Desktop/geodes/sample_data/MT_size.txt")
#
metadata <- read.csv(file = "C:/Users/Goose and Gander/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
genomeinfo <- read.csv(file = "C:/Users/Goose and Gander/Desktop/GEODES_refMAGsSAGs_mapping/genome_phylogeny.csv", header = T, row.names = 1, colClasses = c("character"))
sags_mags <- read.csv("C:/Users/Goose and Gander/Documents/geodes_data_tables/GEODES_MAGS_SAGS_info.csv", header = T, sep = '\t', colClasses = c("character", "character", "numeric", "character", "character", "character" , "character", "character", "character", "character"))
genomeinfo$Phylum[which(genomeinfo$Phylum == "Proteobacteria")] <- genomeinfo$Class[which(genomeinfo$Phylum == "Proteobacteria")]
# read_counts <- read_counts[which(is.na(read_counts[,1]) == F), ]
# mapped_reads <- colSums(read_counts)
#
# percent <- mapped_reads/mt_size$V2 * 100
# Rank abundance curves
# split by lake
colnames(genome_counts) <- gsub(".nonrRNA", "", colnames(genome_counts))
mendota_samples <- match(metadata$Sample[which(metadata$Lake == "Mendota")], colnames(genome_counts))
spark_samples <- match(metadata$Sample[which(metadata$Lake == "Sparkling")], colnames(genome_counts))
trout_samples <- match(metadata$Sample[which(metadata$Lake == "Trout")], colnames(genome_counts))
mendota_samples <- mendota_samples[which(is.na(mendota_samples) == F)]
trout_samples <- trout_samples[which(is.na(trout_samples) == F)]
spark_samples <- spark_samples[which(is.na(spark_samples) == F)]
mendota_counts <- genome_counts[, mendota_samples ]
spark_counts <- genome_counts[, spark_samples ]
trout_counts <- genome_counts[, trout_samples ]
mendota_plot <- data.frame("Genome" = rownames(mendota_counts), "Total" = rowSums(mendota_counts), "Phylum" = genomeinfo$Phylum[match(rownames(mendota_counts), rownames(genomeinfo))])
trout_plot <- data.frame("Genome" = rownames(trout_counts), "Total" = rowSums(trout_counts), "Phylum" = genomeinfo$Phylum[match(rownames(trout_counts), rownames(genomeinfo))])
spark_plot <- data.frame("Genome" = rownames(spark_counts), "Total" = rowSums(spark_counts), "Phylum" = genomeinfo$Phylum[match(rownames(spark_counts), rownames(genomeinfo))])
mendota_plot$Length <- sags_mags$Length[match(mendota_plot$Genome, sags_mags$IMGOID)]
trout_plot$Length <- sags_mags$Length[match(trout_plot$Genome, sags_mags$IMGOID)]
spark_plot$Length <- sags_mags$Length[match(spark_plot$Genome, sags_mags$IMGOID)]
mendota_plot$NormTotal <- mendota_plot$Total/mendota_plot$Length
trout_plot$NormTotal <- trout_plot$Total/trout_plot$Length
spark_plot$NormTotal <- spark_plot$Total/spark_plot$Length
mendota_plot <- mendota_plot[order(mendota_plot$NormTotal, decreasing = T), ]
trout_plot <- trout_plot[order(trout_plot$NormTotal, decreasing = T), ]
spark_plot <- spark_plot[order(spark_plot$NormTotal, decreasing = T), ]
mendota_plot$Genome <- factor(mendota_plot$Genome, levels = mendota_plot$Genome)
trout_plot$Genome <- factor(trout_plot$Genome, levels = trout_plot$Genome)
spark_plot$Genome <- factor(spark_plot$Genome, levels = spark_plot$Genome)
ggplot(data = mendota_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Mendota") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
ggplot(data = trout_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Trout Bog") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
ggplot(data = spark_plot[1:100,], aes(x = Genome, y = NormTotal, fill = Phylum)) + geom_bar(stat = "identity") + labs(x = "Genome", y = "Coverage", title = "Sparkling Lake") + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = "Paired")
head(mendota_plot)
head(genomeinfo)
taxonomy <- apply(genomeinfo[,2:7], 1, paste, collapse=";")
match(mendota_plot$Genome, rownames(genomeinfo))
genomeinfo[105,]
mendota_plot[1,]
mendota_plot$Taxonomy <- taxonomy[match(mendota_plot$Genome, rownames(genomeinfo))]
head(mendota_plot)
write.csv(mendota_plot, file = "C:/Users/Goose and Gander/Documents/Mendota_rank_abundance_MAGs_SAGs.csv", row.names = F, quote = F)
write.csv(mendota_plot[1:100,], file = "C:/Users/Goose and Gander/Documents/Mendota_rank_abundance_MAGs_SAGs.csv", row.names = F, quote = F)
trout_plot$Taxonomy <- taxonomy[match(trout_plot$Genome, rownames(genomeinfo))]
spark_plot$Taxonomy <- taxonomy[match(spark_plot$Genome, rownames(genomeinfo))]
head(trout_plot)
tail(trout_plot)
head(spark_plot)
tail(spark_plot)
write.csv(trout_plot[1:100,], file = "C:/Users/Goose and Gander/Documents/Trout_rank_abundance_MAGs_SAGs.csv", row.names = F, quote = F)
write.csv(spark_plot[1:100,], file = "C:/Users/Goose and Gander/Documents/Sparkling_rank_abundance_MAGs_SAGs.csv", row.names = F, quote = F)
